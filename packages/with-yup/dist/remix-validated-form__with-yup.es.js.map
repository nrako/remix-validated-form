{"version":3,"file":"remix-validated-form__with-yup.es.js","sources":["../src/index.ts"],"sourcesContent":["import { createValidator, FieldErrors, Validator } from \"remix-validated-form\";\nimport type { AnyObjectSchema, InferType, ValidationError } from \"yup\";\n\nconst validationErrorToFieldErrors = (error: ValidationError): FieldErrors => {\n  const fieldErrors: FieldErrors = {};\n  error.inner.forEach((innerError) => {\n    if (!innerError.path) return;\n    fieldErrors[innerError.path] = innerError.message;\n  });\n  return fieldErrors;\n};\n\n/**\n * Create a `Validator` using a `yup` schema.\n */\nexport const withYup = <Schema extends AnyObjectSchema>(\n  validationSchema: Schema\n): Validator<InferType<Schema>> => {\n  return createValidator({\n    validate: async (data) => {\n      try {\n        const validated = await validationSchema.validate(data, {\n          abortEarly: false,\n        });\n        return { data: validated, error: undefined };\n      } catch (err) {\n        return {\n          error: validationErrorToFieldErrors(err as ValidationError),\n          data: undefined,\n        };\n      }\n    },\n    validateField: async (data, field) => {\n      try {\n        await validationSchema.validateAt(field, data);\n        return {};\n      } catch (err) {\n        return { error: (err as ValidationError).message };\n      }\n    },\n  });\n};\n"],"names":[],"mappings":";AAGA,MAAM,+BAA+B,CAAC,UAAwC;AAC5E,QAAM,cAA2B,CAAA;AAC3B,QAAA,MAAM,QAAQ,CAAC,eAAe;AAClC,QAAI,CAAC,WAAW;AAAM;AACV,gBAAA,WAAW,QAAQ,WAAW;AAAA,EAAA,CAC3C;AACM,SAAA;AACT;AAKa,MAAA,UAAU,CACrB,qBACiC;AACjC,SAAO,gBAAgB;AAAA,IACrB,UAAU,OAAO,SAAS;AACpB,UAAA;AACF,cAAM,YAAY,MAAM,iBAAiB,SAAS,MAAM;AAAA,UACtD,YAAY;AAAA,QAAA,CACb;AACD,eAAO,EAAE,MAAM,WAAW,OAAO,OAAU;AAAA,eACpC;AACA,eAAA;AAAA,UACL,OAAO,6BAA6B,GAAsB;AAAA,UAC1D,MAAM;AAAA,QAAA;AAAA,MAEV;AAAA,IACF;AAAA,IACA,eAAe,OAAO,MAAM,UAAU;AAChC,UAAA;AACI,cAAA,iBAAiB,WAAW,OAAO,IAAI;AAC7C,eAAO;eACA;AACA,eAAA,EAAE,OAAQ,IAAwB;MAC3C;AAAA,IACF;AAAA,EAAA,CACD;AACH;;"}