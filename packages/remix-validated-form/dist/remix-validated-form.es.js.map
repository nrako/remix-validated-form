{"version":3,"file":"remix-validated-form.es.js","sources":["../../../node_modules/remeda/dist/es/purry.js","../../../node_modules/remeda/dist/es/_reduceLazy.js","../../../node_modules/remeda/dist/es/equals.js","../../../node_modules/remeda/dist/es/omit.js","../../../node_modules/remeda/dist/es/omitBy.js","../../../node_modules/remeda/dist/es/pathOr.js","../../../node_modules/remeda/dist/es/uniq.js","../src/internal/logic/getCheckboxChecked.ts","../src/internal/logic/getRadioChecked.ts","../src/internal/getInputProps.ts","../../set-get/src/stringToPathArray.ts","../../set-get/src/setPath.ts","../../set-get/src/getPath.ts","../../../node_modules/tiny-invariant/dist/tiny-invariant.esm.js","../src/internal/constants.ts","../src/internal/formContext.ts","../src/internal/hydratable.ts","../../../node_modules/zustand/esm/vanilla.js","../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../../../node_modules/use-sync-external-store/shim/index.js","../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../../../node_modules/use-sync-external-store/shim/with-selector.js","../../../node_modules/zustand/esm/index.js","../../../node_modules/immer/dist/immer.esm.js","../../../node_modules/zustand/esm/middleware/immer.js","../src/internal/logic/requestSubmit.ts","../src/internal/state/arrayUtil.ts","../src/internal/state/createFormStore.ts","../src/internal/state/storeHooks.ts","../src/internal/hooks.ts","../src/internal/state/controlledFields.ts","../src/hooks.ts","../../../node_modules/@remix-run/server-runtime/dist/esm/responses.js","../src/server.ts","../src/internal/MultiValueMap.ts","../src/internal/submissionCallbacks.ts","../src/internal/util.ts","../src/ValidatedForm.tsx","../src/internal/flatten.ts","../src/validation/createValidator.ts","../src/unreleased/formStateHooks.ts","../src/userFacingFormContext.ts","../src/internal/state/fieldArray.tsx"],"sourcesContent":["var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n/**\n * Creates a function with `data-first` and `data-last` signatures.\n *\n * `purry` is a dynamic function and it's not type safe. It should be wrapped by a function that have proper typings.\n * Refer to the example below for correct usage.\n *\n * @param fn the function to purry.\n * @param args the arguments\n * @signature R.purry(fn, arguments);\n * @example-raw\n *    function _findIndex(array, fn) {\n *      for (let i = 0; i < array.length; i++) {\n *        if (fn(array[i])) {\n *          return i;\n *        }\n *      }\n *      return -1;\n *    }\n *\n *    // data-first\n *    function findIndex<T>(array: T[], fn: (item: T) => boolean): number;\n *\n *    // data-last\n *    function findIndex<T>(fn: (item: T) => boolean): (array: T[]) => number;\n *\n *    function findIndex() {\n *      return R.purry(_findIndex, arguments);\n *    }\n * @category Function\n */\nexport function purry(fn, args, lazy) {\n    var diff = fn.length - args.length;\n    var arrayArgs = Array.from(args);\n    if (diff === 0) {\n        return fn.apply(void 0, arrayArgs);\n    }\n    if (diff === 1) {\n        var ret = function (data) { return fn.apply(void 0, __spreadArray([data], arrayArgs, false)); };\n        if (lazy || fn.lazy) {\n            ret.lazy = lazy || fn.lazy;\n            ret.lazyArgs = args;\n        }\n        return ret;\n    }\n    throw new Error('Wrong number of arguments');\n}\n","export function _reduceLazy(array, lazy, indexed) {\n    return array.reduce(function (acc, item, index) {\n        var result = indexed ? lazy(item, index, array) : lazy(item);\n        if (result.hasMany === true) {\n            acc.push.apply(acc, result.next);\n        }\n        else if (result.hasNext === true) {\n            acc.push(result.next);\n        }\n        return acc;\n    }, []);\n}\n","import { purry } from './purry';\n// from https://github.com/epoberezkin/fast-deep-equal/blob/master/index.js\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nexport function equals() {\n    return purry(_equals, arguments);\n}\nfunction _equals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a && b && typeof a === 'object' && typeof b === 'object') {\n        var arrA = isArray(a);\n        var arrB = isArray(b);\n        var i = void 0;\n        var length = void 0;\n        var key = void 0;\n        if (arrA && arrB) {\n            length = a.length;\n            if (length !== b.length) {\n                return false;\n            }\n            for (i = length; i-- !== 0;) {\n                if (!equals(a[i], b[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        if (arrA !== arrB) {\n            return false;\n        }\n        var dateA = a instanceof Date;\n        var dateB = b instanceof Date;\n        if (dateA !== dateB) {\n            return false;\n        }\n        if (dateA && dateB) {\n            return a.getTime() === b.getTime();\n        }\n        var regexpA = a instanceof RegExp;\n        var regexpB = b instanceof RegExp;\n        if (regexpA !== regexpB) {\n            return false;\n        }\n        if (regexpA && regexpB) {\n            return a.toString() === b.toString();\n        }\n        var keys = keyList(a);\n        length = keys.length;\n        if (length !== keyList(b).length) {\n            return false;\n        }\n        for (i = length; i-- !== 0;) {\n            if (!hasProp.call(b, keys[i])) {\n                return false;\n            }\n        }\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!equals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return a !== a && b !== b;\n}\n","import { purry } from './purry';\nexport function omit() {\n    return purry(_omit, arguments);\n}\nfunction _omit(object, names) {\n    var set = new Set(names);\n    return Object.entries(object).reduce(function (acc, _a) {\n        var name = _a[0], value = _a[1];\n        if (!set.has(name)) {\n            acc[name] = value;\n        }\n        return acc;\n    }, {});\n}\n","import { purry } from './purry';\nexport function omitBy() {\n    return purry(_omitBy, arguments);\n}\nfunction _omitBy(object, fn) {\n    return Object.keys(object).reduce(function (acc, key) {\n        if (!fn(object[key], key)) {\n            acc[key] = object[key];\n        }\n        return acc;\n    }, {});\n}\n","import { purry } from './purry';\nexport function pathOr() {\n    return purry(_pathOr, arguments);\n}\nfunction _pathOr(object, path, defaultValue) {\n    var current = object;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var prop = path_1[_i];\n        if (current == null || current[prop] == null) {\n            return defaultValue;\n        }\n        current = current[prop];\n    }\n    return current;\n}\n","import { purry } from './purry';\nimport { _reduceLazy } from './_reduceLazy';\nexport function uniq() {\n    return purry(_uniq, arguments, uniq.lazy);\n}\nfunction _uniq(array) {\n    return _reduceLazy(array, uniq.lazy());\n}\n(function (uniq) {\n    function lazy() {\n        var set = new Set();\n        return function (value) {\n            if (set.has(value)) {\n                return {\n                    done: false,\n                    hasNext: false,\n                };\n            }\n            set.add(value);\n            return {\n                done: false,\n                hasNext: true,\n                next: value,\n            };\n        };\n    }\n    uniq.lazy = lazy;\n})(uniq || (uniq = {}));\n","export const getCheckboxChecked = (\n  checkboxValue: string | undefined = \"on\",\n  newValue: unknown\n): boolean | undefined => {\n  if (Array.isArray(newValue))\n    return newValue.some((val) => val === true || val === checkboxValue);\n  if (typeof newValue === \"boolean\") return newValue;\n  if (typeof newValue === \"string\") return newValue === checkboxValue;\n  return undefined;\n};\n","export const getRadioChecked = (\n  radioValue: string | undefined = \"on\",\n  newValue: unknown\n) => {\n  if (typeof newValue === \"string\") return newValue === radioValue;\n  return undefined;\n};\n\nif (import.meta.vitest) {\n  const { it, expect } = import.meta.vitest;\n  it(\"getRadioChecked\", () => {\n    expect(getRadioChecked(\"on\", \"on\")).toBe(true);\n    expect(getRadioChecked(\"on\", undefined)).toBe(undefined);\n    expect(getRadioChecked(\"trueValue\", undefined)).toBe(undefined);\n    expect(getRadioChecked(\"trueValue\", \"bob\")).toBe(false);\n    expect(getRadioChecked(\"trueValue\", \"trueValue\")).toBe(true);\n  });\n}\n","import * as R from \"remeda\";\nimport { getCheckboxChecked } from \"./logic/getCheckboxChecked\";\nimport { getRadioChecked } from \"./logic/getRadioChecked\";\n\nexport type ValidationBehavior = \"onBlur\" | \"onChange\" | \"onSubmit\";\n\nexport type ValidationBehaviorOptions = {\n  initial: ValidationBehavior;\n  whenTouched: ValidationBehavior;\n  whenSubmitted: ValidationBehavior;\n};\n\nexport type CreateGetInputPropsOptions = {\n  clearError: () => void;\n  validate: () => void;\n  defaultValue?: any;\n  touched: boolean;\n  setTouched: (touched: boolean) => void;\n  hasBeenSubmitted: boolean;\n  validationBehavior?: Partial<ValidationBehaviorOptions>;\n  name: string;\n};\n\ntype HandledProps = \"name\" | \"defaultValue\" | \"defaultChecked\";\ntype Callbacks = \"onChange\" | \"onBlur\";\n\ntype MinimalInputProps = {\n  onChange?: (...args: any[]) => void;\n  onBlur?: (...args: any[]) => void;\n  defaultValue?: any;\n  defaultChecked?: boolean;\n  name?: string;\n  type?: string;\n};\n\nexport type GetInputProps = <T extends MinimalInputProps>(\n  props?: Omit<T, HandledProps | Callbacks> & Partial<Pick<T, Callbacks>>\n) => T;\n\nconst defaultValidationBehavior: ValidationBehaviorOptions = {\n  initial: \"onBlur\",\n  whenTouched: \"onChange\",\n  whenSubmitted: \"onChange\",\n};\n\nexport const createGetInputProps = ({\n  clearError,\n  validate,\n  defaultValue,\n  touched,\n  setTouched,\n  hasBeenSubmitted,\n  validationBehavior,\n  name,\n}: CreateGetInputPropsOptions): GetInputProps => {\n  const validationBehaviors = {\n    ...defaultValidationBehavior,\n    ...validationBehavior,\n  };\n\n  return <T extends MinimalInputProps>(props = {} as any) => {\n    const behavior = hasBeenSubmitted\n      ? validationBehaviors.whenSubmitted\n      : touched\n      ? validationBehaviors.whenTouched\n      : validationBehaviors.initial;\n\n    const inputProps: MinimalInputProps = {\n      ...props,\n      onChange: (...args: unknown[]) => {\n        if (behavior === \"onChange\") validate();\n        else clearError();\n        return props?.onChange?.(...args);\n      },\n      onBlur: (...args: unknown[]) => {\n        if (behavior === \"onBlur\") validate();\n        setTouched(true);\n        return props?.onBlur?.(...args);\n      },\n      name,\n    };\n\n    if (props.type === \"checkbox\") {\n      inputProps.defaultChecked = getCheckboxChecked(props.value, defaultValue);\n    } else if (props.type === \"radio\") {\n      inputProps.defaultChecked = getRadioChecked(props.value, defaultValue);\n    } else if (props.value === undefined) {\n      // We should only set the defaultValue if the input is uncontrolled.\n      inputProps.defaultValue = defaultValue;\n    }\n\n    return R.omitBy(inputProps, (value) => value === undefined) as T;\n  };\n};\n","export const stringToPathArray = <T extends string>(\n  path: T\n): (string | number)[] => {\n  if (path.length === 0) return [];\n\n  const match =\n    path.match(/^\\[(.+?)\\](.*)$/) || path.match(/^\\.?([^\\.\\[\\]]+)(.*)$/);\n  if (match) {\n    const [_, key, rest] = match;\n    return [/^\\d+$/.test(key) ? Number(key) : key, ...stringToPathArray(rest)];\n  }\n  return [path];\n};\n","import { stringToPathArray } from \"./stringToPathArray\";\n\nexport function setPath<T>(object: T, path: string, defaultValue: any) {\n  return _setPathNormalized(object, stringToPathArray(path), defaultValue);\n}\n\nfunction _setPathNormalized(\n  object: any,\n  path: (string | number)[],\n  value: any\n): any {\n  const leadingSegments = path.slice(0, -1);\n  const lastSegment = path[path.length - 1];\n\n  let obj = object;\n  for (let i = 0; i < leadingSegments.length; i++) {\n    const segment = leadingSegments[i];\n    if (obj[segment] === undefined) {\n      const nextSegment = leadingSegments[i + 1] ?? lastSegment;\n      obj[segment] = typeof nextSegment === \"number\" ? [] : {};\n    }\n    obj = obj[segment];\n  }\n  obj[lastSegment] = value;\n  return object;\n}\n","import * as R from \"remeda\";\nimport { stringToPathArray } from \"./stringToPathArray\";\n\n// pathOr types don't support deeper than 3 levels, but the code works\nexport const getPath = (object: any, path: string) =>\n  R.pathOr(object, stringToPathArray(path) as any, undefined);\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? prefix + \": \" + provided : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","export const FORM_ID_FIELD = \"__rvfInternalFormId\" as const;\nexport const FORM_DEFAULTS_FIELD = \"__rvfInternalFormDefaults\" as const;\nexport const formDefaultValuesKey = (formId: string) =>\n  `${FORM_DEFAULTS_FIELD}_${formId}`;\n","import { useFetcher } from \"@remix-run/react\";\nimport { createContext } from \"react\";\n\nexport type InternalFormContextValue = {\n  formId: string | symbol;\n  action?: string;\n  subaction?: string;\n  defaultValuesProp?: { [fieldName: string]: any };\n  fetcher?: ReturnType<typeof useFetcher>;\n};\n\nexport const InternalFormContext =\n  createContext<InternalFormContextValue | null>(null);\n","/**\n * The purpose of this type is to simplify the logic\n * around data that needs to come from the server initially,\n * but from the internal state after hydration.\n */\nexport type Hydratable<T> = {\n  hydrateTo: (data: T) => T;\n  map: <U>(fn: (data: T) => U) => Hydratable<U>;\n};\n\nconst serverData = <T>(data: T): Hydratable<T> => ({\n  hydrateTo: () => data,\n  map: (fn) => serverData(fn(data)),\n});\n\nconst hydratedData = <T>(): Hydratable<T> => ({\n  hydrateTo: (hydratedData: T) => hydratedData,\n  map: <U>() => hydratedData<U>(),\n});\n\nconst from = <T>(data: T, hydrated: boolean): Hydratable<T> =>\n  hydrated ? hydratedData<T>() : serverData<T>(data);\n\nexport const hydratable = {\n  serverData,\n  hydratedData,\n  from,\n};\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore as default };\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","import createStore__default from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nexport { default as createStore } from 'zustand/vanilla';\nimport { useDebugValue } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\n\nfunction useStore(api, selector = api.getState, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(api.subscribe, api.getState, api.getServerState || api.getState, selector, equalityFn);\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = typeof createState === \"function\" ? createStore__default(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar create$1 = create;\n\nexport { create$1 as default, useStore };\n","function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];if(\"production\"!==process.env.NODE_ENV){var i=Y[n],o=i?\"function\"==typeof i?i.apply(null,t):i:\"unknown error nr: \"+n;throw Error(\"[Immer] \"+o)}throw Error(\"[Immer] minified error nr: \"+n+(t.length?\" \"+t.map((function(n){return\"'\"+n+\"'\"})).join(\",\"):\"\")+\". Find the full error at: https://bit.ly/3cXEKWf\")}function r(n){return!!n&&!!n[Q]}function t(n){return!!n&&(function(n){if(!n||\"object\"!=typeof n)return!1;var r=Object.getPrototypeOf(n);if(null===r)return!0;var t=Object.hasOwnProperty.call(r,\"constructor\")&&r.constructor;return t===Object||\"function\"==typeof t&&Function.toString.call(t)===Z}(n)||Array.isArray(n)||!!n[L]||!!n.constructor[L]||s(n)||v(n))}function e(t){return r(t)||n(23,t),t[Q].t}function i(n,r,t){void 0===t&&(t=!1),0===o(n)?(t?Object.keys:nn)(n).forEach((function(e){t&&\"symbol\"==typeof e||r(e,n[e],n)})):n.forEach((function(t,e){return r(e,t,n)}))}function o(n){var r=n[Q];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s(n)?2:v(n)?3:0}function u(n,r){return 2===o(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a(n,r){return 2===o(n)?n.get(r):n[r]}function f(n,r,t){var e=o(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t}function c(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s(n){return X&&n instanceof Map}function v(n){return q&&n instanceof Set}function p(n){return n.o||n.t}function l(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn(n);delete r[Q];for(var t=nn(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]})}return Object.create(Object.getPrototypeOf(n),r)}function d(n,e){return void 0===e&&(e=!1),y(n)||r(n)||!t(n)?n:(o(n)>1&&(n.set=n.add=n.clear=n.delete=h),Object.freeze(n),e&&i(n,(function(n,r){return d(r,!0)}),!0),n)}function h(){n(2)}function y(n){return null==n||\"object\"!=typeof n||Object.isFrozen(n)}function b(r){var t=tn[r];return t||n(18,r),t}function m(n,r){tn[n]||(tn[n]=r)}function _(){return\"production\"===process.env.NODE_ENV||U||n(0),U}function j(n,r){r&&(b(\"Patches\"),n.u=[],n.s=[],n.v=r)}function O(n){g(n),n.p.forEach(S),n.p=null}function g(n){n===U&&(U=n.l)}function w(n){return U={p:[],l:U,h:n,m:!0,_:0}}function S(n){var r=n[Q];0===r.i||1===r.i?r.j():r.O=!0}function P(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.g||b(\"ES5\").S(e,r,o),o?(i[Q].P&&(O(e),n(4)),t(r)&&(r=M(e,r),e.l||x(e,r)),e.u&&b(\"Patches\").M(i[Q].t,r,e.u,e.s)):r=M(e,i,[]),O(e),e.u&&e.v(e.u,e.s),r!==H?r:void 0}function M(n,r,t){if(y(r))return r;var e=r[Q];if(!e)return i(r,(function(i,o){return A(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A(n,e,o,r,i,t)})),x(n,o,!1),t&&n.u&&b(\"Patches\").R(e,t,n.u,n.s)}return e.o}function A(e,i,o,a,c,s){if(\"production\"!==process.env.NODE_ENV&&c===o&&n(5),r(c)){var v=M(e,c,s&&i&&3!==i.i&&!u(i.D,a)?s.concat(a):void 0);if(f(o,a,v),!r(v))return;e.m=!1}if(t(c)&&!y(c)){if(!e.h.F&&e._<1)return;M(e,c),i&&i.A.l||x(e,c)}}function x(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d(r,t)}function z(n,r){var t=n[Q];return(t?p(t):n)[r]}function I(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t)}}function k(n){n.P||(n.P=!0,n.l&&k(n.l))}function E(n){n.o||(n.o=l(n.t))}function R(n,r,t){var e=s(r)?b(\"MapSet\").N(r,t):v(r)?b(\"MapSet\").T(r,t):n.g?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en;t&&(i=[e],o=on);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b(\"ES5\").J(r,t);return(t?t.A:_()).p.push(e),e}function D(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q],c=o(r);if(u){if(!u.P&&(u.i<4||!b(\"ES5\").K(u)))return u.t;u.I=!0,e=F(r,c),u.I=!1}else e=F(r,c);return i(e,(function(r,t){u&&a(u.t,r)===t||f(e,r,n(t))})),3===c?new Set(e):e}(e)}function F(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l(n)}function N(){function t(n,r){var t=s[n];return t?t.enumerable=r:s[n]=t={configurable:!0,enumerable:r,get:function(){var r=this[Q];return\"production\"!==process.env.NODE_ENV&&f(r),en.get(r,n)},set:function(r){var t=this[Q];\"production\"!==process.env.NODE_ENV&&f(t),en.set(t,n,r)}},t}function e(n){for(var r=n.length-1;r>=0;r--){var t=n[r][Q];if(!t.P)switch(t.i){case 5:a(t)&&k(t);break;case 4:o(t)&&k(t)}}}function o(n){for(var r=n.t,t=n.k,e=nn(t),i=e.length-1;i>=0;i--){var o=e[i];if(o!==Q){var a=r[o];if(void 0===a&&!u(r,o))return!0;var f=t[o],s=f&&f[Q];if(s?s.t!==a:!c(f,a))return!0}}var v=!!r[Q];return e.length!==nn(r).length+(v?0:1)}function a(n){var r=n.k;if(r.length!==n.t.length)return!0;var t=Object.getOwnPropertyDescriptor(r,r.length-1);if(t&&!t.get)return!0;for(var e=0;e<r.length;e++)if(!r.hasOwnProperty(e))return!0;return!1}function f(r){r.O&&n(3,JSON.stringify(p(r)))}var s={};m(\"ES5\",{J:function(n,r){var e=Array.isArray(n),i=function(n,r){if(n){for(var e=Array(r.length),i=0;i<r.length;i++)Object.defineProperty(e,\"\"+i,t(i,!0));return e}var o=rn(r);delete o[Q];for(var u=nn(o),a=0;a<u.length;a++){var f=u[a];o[f]=t(f,n||!!o[f].enumerable)}return Object.create(Object.getPrototypeOf(r),o)}(e,n),o={i:e?5:4,A:r?r.A:_(),P:!1,I:!1,D:{},l:r,t:n,k:i,o:null,O:!1,C:!1};return Object.defineProperty(i,Q,{value:o,writable:!0}),i},S:function(n,t,o){o?r(t)&&t[Q].A===n&&e(n.p):(n.u&&function n(r){if(r&&\"object\"==typeof r){var t=r[Q];if(t){var e=t.t,o=t.k,f=t.D,c=t.i;if(4===c)i(o,(function(r){r!==Q&&(void 0!==e[r]||u(e,r)?f[r]||n(o[r]):(f[r]=!0,k(t)))})),i(e,(function(n){void 0!==o[n]||u(o,n)||(f[n]=!1,k(t))}));else if(5===c){if(a(t)&&(k(t),f.length=!0),o.length<e.length)for(var s=o.length;s<e.length;s++)f[s]=!1;else for(var v=e.length;v<o.length;v++)f[v]=!0;for(var p=Math.min(o.length,e.length),l=0;l<p;l++)o.hasOwnProperty(l)||(f[l]=!0),void 0===f[l]&&n(o[l])}}}}(n.p[0]),e(n.p))},K:function(n){return 4===n.i?o(n):a(n)}})}function T(){function e(n){if(!t(n))return n;if(Array.isArray(n))return n.map(e);if(s(n))return new Map(Array.from(n.entries()).map((function(n){return[n[0],e(n[1])]})));if(v(n))return new Set(Array.from(n).map(e));var r=Object.create(Object.getPrototypeOf(n));for(var i in n)r[i]=e(n[i]);return u(n,L)&&(r[L]=n[L]),r}function f(n){return r(n)?e(n):n}var c=\"add\";m(\"Patches\",{$:function(r,t){return t.forEach((function(t){for(var i=t.path,u=t.op,f=r,s=0;s<i.length-1;s++){var v=o(f),p=\"\"+i[s];0!==v&&1!==v||\"__proto__\"!==p&&\"constructor\"!==p||n(24),\"function\"==typeof f&&\"prototype\"===p&&n(24),\"object\"!=typeof(f=a(f,p))&&n(15,i.join(\"/\"))}var l=o(f),d=e(t.value),h=i[i.length-1];switch(u){case\"replace\":switch(l){case 2:return f.set(h,d);case 3:n(16);default:return f[h]=d}case c:switch(l){case 1:return\"-\"===h?f.push(d):f.splice(h,0,d);case 2:return f.set(h,d);case 3:return f.add(d);default:return f[h]=d}case\"remove\":switch(l){case 1:return f.splice(h,1);case 2:return f.delete(h);case 3:return f.delete(t.value);default:return delete f[h]}default:n(17,u)}})),r},R:function(n,r,t,e){switch(n.i){case 0:case 4:case 2:return function(n,r,t,e){var o=n.t,s=n.o;i(n.D,(function(n,i){var v=a(o,n),p=a(s,n),l=i?u(o,n)?\"replace\":c:\"remove\";if(v!==p||\"replace\"!==l){var d=r.concat(n);t.push(\"remove\"===l?{op:l,path:d}:{op:l,path:d,value:p}),e.push(l===c?{op:\"remove\",path:d}:\"remove\"===l?{op:c,path:d,value:f(v)}:{op:\"replace\",path:d,value:f(v)})}}))}(n,r,t,e);case 5:case 1:return function(n,r,t,e){var i=n.t,o=n.D,u=n.o;if(u.length<i.length){var a=[u,i];i=a[0],u=a[1];var s=[e,t];t=s[0],e=s[1]}for(var v=0;v<i.length;v++)if(o[v]&&u[v]!==i[v]){var p=r.concat([v]);t.push({op:\"replace\",path:p,value:f(u[v])}),e.push({op:\"replace\",path:p,value:f(i[v])})}for(var l=i.length;l<u.length;l++){var d=r.concat([l]);t.push({op:c,path:d,value:f(u[l])})}i.length<u.length&&e.push({op:\"replace\",path:r.concat([\"length\"]),value:i.length})}(n,r,t,e);case 3:return function(n,r,t,e){var i=n.t,o=n.o,u=0;i.forEach((function(n){if(!o.has(n)){var i=r.concat([u]);t.push({op:\"remove\",path:i,value:n}),e.unshift({op:c,path:i,value:n})}u++})),u=0,o.forEach((function(n){if(!i.has(n)){var o=r.concat([u]);t.push({op:c,path:o,value:n}),e.unshift({op:\"remove\",path:o,value:n})}u++}))}(n,r,t,e)}},M:function(n,r,t,e){t.push({op:\"replace\",path:[],value:r===H?void 0:r}),e.push({op:\"replace\",path:[],value:n})}})}function C(){function r(n,r){function t(){this.constructor=n}a(n,r),n.prototype=(t.prototype=r.prototype,new t)}function e(n){n.o||(n.D=new Map,n.o=new Map(n.t))}function o(n){n.o||(n.o=new Set,n.t.forEach((function(r){if(t(r)){var e=R(n.A.h,r,n);n.p.set(r,e),n.o.add(e)}else n.o.add(r)})))}function u(r){r.O&&n(3,JSON.stringify(p(r)))}var a=function(n,r){return(a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var t in r)r.hasOwnProperty(t)&&(n[t]=r[t])})(n,r)},f=function(){function n(n,r){return this[Q]={i:2,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,D:void 0,t:n,k:this,C:!1,O:!1},this}r(n,Map);var o=n.prototype;return Object.defineProperty(o,\"size\",{get:function(){return p(this[Q]).size}}),o.has=function(n){return p(this[Q]).has(n)},o.set=function(n,r){var t=this[Q];return u(t),p(t).has(n)&&p(t).get(n)===r||(e(t),k(t),t.D.set(n,!0),t.o.set(n,r),t.D.set(n,!0)),this},o.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),e(r),k(r),r.t.has(n)?r.D.set(n,!1):r.D.delete(n),r.o.delete(n),!0},o.clear=function(){var n=this[Q];u(n),p(n).size&&(e(n),k(n),n.D=new Map,i(n.t,(function(r){n.D.set(r,!1)})),n.o.clear())},o.forEach=function(n,r){var t=this;p(this[Q]).forEach((function(e,i){n.call(r,t.get(i),i,t)}))},o.get=function(n){var r=this[Q];u(r);var i=p(r).get(n);if(r.I||!t(i))return i;if(i!==r.t.get(n))return i;var o=R(r.A.h,i,r);return e(r),r.o.set(n,o),o},o.keys=function(){return p(this[Q]).keys()},o.values=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.values()},n.next=function(){var n=t.next();return n.done?n:{done:!1,value:r.get(n.value)}},n},o.entries=function(){var n,r=this,t=this.keys();return(n={})[V]=function(){return r.entries()},n.next=function(){var n=t.next();if(n.done)return n;var e=r.get(n.value);return{done:!1,value:[n.value,e]}},n},o[V]=function(){return this.entries()},n}(),c=function(){function n(n,r){return this[Q]={i:3,l:r,A:r?r.A:_(),P:!1,I:!1,o:void 0,t:n,k:this,p:new Map,O:!1,C:!1},this}r(n,Set);var t=n.prototype;return Object.defineProperty(t,\"size\",{get:function(){return p(this[Q]).size}}),t.has=function(n){var r=this[Q];return u(r),r.o?!!r.o.has(n)||!(!r.p.has(n)||!r.o.has(r.p.get(n))):r.t.has(n)},t.add=function(n){var r=this[Q];return u(r),this.has(n)||(o(r),k(r),r.o.add(n)),this},t.delete=function(n){if(!this.has(n))return!1;var r=this[Q];return u(r),o(r),k(r),r.o.delete(n)||!!r.p.has(n)&&r.o.delete(r.p.get(n))},t.clear=function(){var n=this[Q];u(n),p(n).size&&(o(n),k(n),n.o.clear())},t.values=function(){var n=this[Q];return u(n),o(n),n.o.values()},t.entries=function(){var n=this[Q];return u(n),o(n),n.o.entries()},t.keys=function(){return this.values()},t[V]=function(){return this.values()},t.forEach=function(n,r){for(var t=this.values(),e=t.next();!e.done;)n.call(r,e.value,e.value,this),e=t.next()},n}();m(\"MapSet\",{N:function(n,r){return new f(n,r)},T:function(n,r){return new c(n,r)}})}function J(){N(),C(),T()}function K(n){return n}function $(n){return n}var G,U,W=\"undefined\"!=typeof Symbol&&\"symbol\"==typeof Symbol(\"x\"),X=\"undefined\"!=typeof Map,q=\"undefined\"!=typeof Set,B=\"undefined\"!=typeof Proxy&&void 0!==Proxy.revocable&&\"undefined\"!=typeof Reflect,H=W?Symbol.for(\"immer-nothing\"):((G={})[\"immer-nothing\"]=!0,G),L=W?Symbol.for(\"immer-draftable\"):\"__$immer_draftable\",Q=W?Symbol.for(\"immer-state\"):\"__$immer_state\",V=\"undefined\"!=typeof Symbol&&Symbol.iterator||\"@@iterator\",Y={0:\"Illegal state\",1:\"Immer drafts cannot have computed properties\",2:\"This object has been frozen and should not be mutated\",3:function(n){return\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \"+n},4:\"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",5:\"Immer forbids circular references\",6:\"The first or second argument to `produce` must be a function\",7:\"The third argument to `produce` must be a function or undefined\",8:\"First argument to `createDraft` must be a plain object, an array, or an immerable object\",9:\"First argument to `finishDraft` must be a draft returned by `createDraft`\",10:\"The given draft is already finalized\",11:\"Object.defineProperty() cannot be used on an Immer draft\",12:\"Object.setPrototypeOf() cannot be used on an Immer draft\",13:\"Immer only supports deleting array indices\",14:\"Immer only supports setting array indices and the 'length' property\",15:function(n){return\"Cannot apply patch, path doesn't resolve: \"+n},16:'Sets cannot have \"replace\" patches.',17:function(n){return\"Unsupported patch operation: \"+n},18:function(n){return\"The plugin for '\"+n+\"' has not been loaded into Immer. To enable the plugin, import and call `enable\"+n+\"()` when initializing your application.\"},20:\"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",21:function(n){return\"produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '\"+n+\"'\"},22:function(n){return\"'current' expects a draft, got: \"+n},23:function(n){return\"'original' expects a draft, got: \"+n},24:\"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"},Z=\"\"+Object.prototype.constructor,nn=\"undefined\"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn=Object.getOwnPropertyDescriptors||function(n){var r={};return nn(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t)})),r},tn={},en={get:function(n,r){if(r===Q)return n;var e=p(n);if(!u(e,r))return function(n,r,t){var e,i=I(r,t);return i?\"value\"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z(n.t,r)?(E(n),n.o[r]=R(n.A.h,i,n)):i},has:function(n,r){return r in p(n)},ownKeys:function(n){return Reflect.ownKeys(p(n))},set:function(n,r,t){var e=I(p(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z(p(n),r),o=null==i?void 0:i[Q];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c(t,i)&&(void 0!==t||u(n.t,r)))return!0;E(n),k(n)}return n.o[r]===t&&\"number\"!=typeof t&&(void 0!==t||r in n.o)||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z(n.t,r)||r in n.t?(n.D[r]=!1,E(n),k(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||\"length\"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11)},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12)}},on={};i(en,(function(n,r){on[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)}})),on.deleteProperty=function(r,t){return\"production\"!==process.env.NODE_ENV&&isNaN(parseInt(t))&&n(13),on.set.call(this,r,t,void 0)},on.set=function(r,t,e){return\"production\"!==process.env.NODE_ENV&&\"length\"!==t&&isNaN(parseInt(t))&&n(14),en.set.call(this,r[0],t,e,r[0])};var un=function(){function e(r){var e=this;this.g=B,this.F=!0,this.produce=function(r,i,o){if(\"function\"==typeof r&&\"function\"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return(t=i).call.apply(t,[r,n].concat(e))}))}}var f;if(\"function\"!=typeof i&&n(6),void 0!==o&&\"function\"!=typeof o&&n(7),t(r)){var c=w(e),s=R(e,r,void 0),v=!0;try{f=i(s),v=!1}finally{v?O(c):g(c)}return\"undefined\"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j(c,o),P(n,c)}),(function(n){throw O(c),n})):(j(c,o),P(f,c))}if(!r||\"object\"!=typeof r){if(void 0===(f=i(r))&&(f=r),f===H&&(f=void 0),e.F&&d(f,!0),o){var p=[],l=[];b(\"Patches\").M(r,f,p,l),o(p,l)}return f}n(21,r)},this.produceWithPatches=function(n,r){if(\"function\"==typeof n)return function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))};var t,i,o=e.produce(n,r,(function(n,r){t=n,i=r}));return\"undefined\"!=typeof Promise&&o instanceof Promise?o.then((function(n){return[n,t,i]})):[o,t,i]},\"boolean\"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),\"boolean\"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze)}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D(e));var i=w(this),o=R(this,e,void 0);return o[Q].C=!0,g(i),o},i.finishDraft=function(r,t){var e=r&&r[Q];\"production\"!==process.env.NODE_ENV&&(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j(i,t),P(void 0,i)},i.setAutoFreeze=function(n){this.F=n},i.setUseProxies=function(r){r&&!B&&n(20),this.g=r},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&\"replace\"===i.op){n=i.value;break}}e>-1&&(t=t.slice(e+1));var o=b(\"Patches\").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t)}))},e}(),an=new un,fn=an.produce,cn=an.produceWithPatches.bind(an),sn=an.setAutoFreeze.bind(an),vn=an.setUseProxies.bind(an),pn=an.applyPatches.bind(an),ln=an.createDraft.bind(an),dn=an.finishDraft.bind(an);export default fn;export{un as Immer,pn as applyPatches,K as castDraft,$ as castImmutable,ln as createDraft,D as current,J as enableAllPlugins,N as enableES5,C as enableMapSet,T as enablePatches,dn as finishDraft,d as freeze,L as immerable,r as isDraft,t as isDraftable,H as nothing,e as original,fn as produce,cn as produceWithPatches,sn as setAutoFreeze,vn as setUseProxies};\n//# sourceMappingURL=immer.esm.js.map\n","import { produce } from 'immer';\n\nconst immerImpl = (initializer) => (set, get, store) => {\n  store.setState = (updater, replace, ...a) => {\n    const nextState = typeof updater === \"function\" ? produce(updater) : updater;\n    return set(nextState, replace, ...a);\n  };\n  return initializer(store.setState, get, store);\n};\nconst immer = immerImpl;\n\nexport { immer };\n","/**\n * Ponyfill of the HTMLFormElement.requestSubmit() method.\n * Based on polyfill from: https://github.com/javan/form-request-submit-polyfill/blob/main/form-request-submit-polyfill.js\n */\nexport const requestSubmit = (\n  element: HTMLFormElement,\n  submitter?: HTMLElement\n) => {\n  // In vitest, let's test the polyfill.\n  // Cypress will test the native implementation by nature of using chrome.\n  if (\n    typeof Object.getPrototypeOf(element).requestSubmit === \"function\" &&\n    !import.meta.vitest\n  ) {\n    element.requestSubmit(submitter);\n    return;\n  }\n\n  if (submitter) {\n    validateSubmitter(element, submitter);\n    submitter.click();\n    return;\n  }\n\n  const dummySubmitter = document.createElement(\"input\");\n  dummySubmitter.type = \"submit\";\n  dummySubmitter.hidden = true;\n  element.appendChild(dummySubmitter);\n  dummySubmitter.click();\n  element.removeChild(dummySubmitter);\n};\n\nfunction validateSubmitter(element: HTMLFormElement, submitter: HTMLElement) {\n  // Should be redundant, but here for completeness\n  const isHtmlElement = submitter instanceof HTMLElement;\n  if (!isHtmlElement) {\n    raise(TypeError, \"parameter 1 is not of type 'HTMLElement'\");\n  }\n\n  const hasSubmitType =\n    \"type\" in submitter && (submitter as HTMLInputElement).type === \"submit\";\n  if (!hasSubmitType)\n    raise(TypeError, \"The specified element is not a submit button\");\n\n  const isForCorrectForm =\n    \"form\" in submitter && (submitter as HTMLInputElement).form === element;\n  if (!isForCorrectForm)\n    raise(\n      DOMException,\n      \"The specified element is not owned by this form element\",\n      \"NotFoundError\"\n    );\n}\n\ninterface ErrorConstructor {\n  new (message: string, name?: string): Error;\n}\n\nfunction raise(\n  errorConstructor: ErrorConstructor,\n  message: string,\n  name?: string\n): never {\n  throw new errorConstructor(\n    \"Failed to execute 'requestSubmit' on 'HTMLFormElement': \" + message + \".\",\n    name\n  );\n}\n\nif (import.meta.vitest) {\n  const { it, expect } = import.meta.vitest;\n  it(\"should validate the submitter\", () => {\n    const form = document.createElement(\"form\");\n    document.body.appendChild(form);\n\n    const submitter = document.createElement(\"input\");\n    expect(() => validateSubmitter(null as any, null as any)).toThrow();\n    expect(() => validateSubmitter(form, null as any)).toThrow();\n    expect(() => validateSubmitter(form, submitter)).toThrow();\n    expect(() =>\n      validateSubmitter(form, document.createElement(\"div\"))\n    ).toThrow();\n\n    submitter.type = \"submit\";\n    expect(() => validateSubmitter(form, submitter)).toThrow();\n\n    form.appendChild(submitter);\n    expect(() => validateSubmitter(form, submitter)).not.toThrow();\n\n    form.removeChild(submitter);\n    expect(() => validateSubmitter(form, submitter)).toThrow();\n\n    document.body.appendChild(submitter);\n    form.id = \"test-form\";\n    submitter.setAttribute(\"form\", \"test-form\");\n    expect(() => validateSubmitter(form, submitter)).not.toThrow();\n\n    const button = document.createElement(\"button\");\n    button.type = \"submit\";\n    form.appendChild(button);\n    expect(() => validateSubmitter(form, button)).not.toThrow();\n  });\n}\n","import { getPath, setPath } from \"set-get\";\nimport invariant from \"tiny-invariant\";\n\n////\n// All of these array helpers are written in a way that mutates the original array.\n// This is because we're working with immer.\n////\n\nexport const getArray = (values: any, field: string): unknown[] => {\n  const value = getPath(values, field);\n  if (value === undefined || value === null) {\n    const newValue: unknown[] = [];\n    setPath(values, field, newValue);\n    return newValue;\n  }\n  invariant(\n    Array.isArray(value),\n    `FieldArray: defaultValue value for ${field} must be an array, null, or undefined`\n  );\n  return value;\n};\n\nexport const swap = (array: unknown[], indexA: number, indexB: number) => {\n  const itemA = array[indexA];\n  const itemB = array[indexB];\n\n  const hasItemA = indexA in array;\n  const hasItemB = indexB in array;\n\n  // If we're dealing with a sparse array (i.e. one of the indeces doesn't exist),\n  // we should keep it sparse\n  if (hasItemA) {\n    array[indexB] = itemA;\n  } else {\n    delete array[indexB];\n  }\n\n  if (hasItemB) {\n    array[indexA] = itemB;\n  } else {\n    delete array[indexA];\n  }\n};\n\n// A splice that can handle sparse arrays\nfunction sparseSplice(\n  array: unknown[],\n  start: number,\n  deleteCount: number,\n  item?: unknown\n) {\n  // Inserting an item into an array won't behave as we need it to if the array isn't\n  // at least as long as the start index. We can force the array to be long enough like this.\n  if (array.length < start && item) {\n    array.length = start;\n  }\n\n  // If we just pass item in, it'll be undefined and splice will delete the item.\n  if (arguments.length === 4) return array.splice(start, deleteCount, item);\n  return array.splice(start, deleteCount);\n}\n\nexport const move = (array: unknown[], from: number, to: number) => {\n  const [item] = sparseSplice(array, from, 1);\n  sparseSplice(array, to, 0, item);\n};\n\nexport const insert = (array: unknown[], index: number, value: unknown) => {\n  sparseSplice(array, index, 0, value);\n};\n\nexport const remove = (array: unknown[], index: number) => {\n  sparseSplice(array, index, 1);\n};\n\nexport const replace = (array: unknown[], index: number, value: unknown) => {\n  sparseSplice(array, index, 1, value);\n};\n\n/**\n * The purpose of this helper is to make it easier to update `fieldErrors` and `touchedFields`.\n * We key those objects by full paths to the fields.\n * When we're doing array mutations, that makes it difficult to update those objects.\n */\nexport const mutateAsArray = (\n  field: string,\n  obj: Record<string, any>,\n  mutate: (arr: any[]) => void\n) => {\n  const beforeKeys = new Set<string>();\n  const arr: any[] = [];\n\n  for (const [key, value] of Object.entries(obj)) {\n    if (key.startsWith(field) && key !== field) {\n      beforeKeys.add(key);\n      setPath(arr, key.substring(field.length), value);\n    }\n  }\n\n  mutate(arr);\n  for (const key of beforeKeys) {\n    delete obj[key];\n  }\n\n  const newKeys = getDeepArrayPaths(arr);\n  for (const key of newKeys) {\n    const val = getPath(arr, key);\n    if (val !== undefined) {\n      obj[`${field}${key}`] = val;\n    }\n  }\n};\n\nconst getDeepArrayPaths = (obj: any, basePath: string = \"\"): string[] => {\n  // This only needs to handle arrays and plain objects\n  // and we can assume the first call is always an array.\n\n  if (Array.isArray(obj)) {\n    return obj.flatMap((item, index) =>\n      getDeepArrayPaths(item, `${basePath}[${index}]`)\n    );\n  }\n\n  if (typeof obj === \"object\") {\n    return Object.keys(obj).flatMap((key) =>\n      getDeepArrayPaths(obj[key], `${basePath}.${key}`)\n    );\n  }\n\n  return [basePath];\n};\n\nif (import.meta.vitest) {\n  const { describe, expect, it } = import.meta.vitest;\n\n  // Count the actual number of items in the array\n  // instead of just getting the length.\n  // This is useful for validating that sparse arrays are handled correctly.\n  const countArrayItems = (arr: any[]) => {\n    let count = 0;\n    arr.forEach(() => count++);\n    return count;\n  };\n\n  describe(\"getArray\", () => {\n    it(\"shoud get a deeply nested array that can be mutated to update the nested value\", () => {\n      const values = {\n        d: [\n          { foo: \"bar\", baz: [true, false] },\n          { e: true, f: \"hi\" },\n        ],\n      };\n      const result = getArray(values, \"d[0].baz\");\n      const finalValues = {\n        d: [\n          { foo: \"bar\", baz: [true, false, true] },\n          { e: true, f: \"hi\" },\n        ],\n      };\n\n      expect(result).toEqual([true, false]);\n      result.push(true);\n      expect(values).toEqual(finalValues);\n    });\n\n    it(\"should return an empty array that can be mutated if result is null or undefined\", () => {\n      const values = {};\n      const result = getArray(values, \"a.foo[0].bar\");\n      const finalValues = {\n        a: { foo: [{ bar: [\"Bob ross\"] }] },\n      };\n\n      expect(result).toEqual([]);\n      result.push(\"Bob ross\");\n      expect(values).toEqual(finalValues);\n    });\n\n    it(\"should throw if the value is defined and not an array\", () => {\n      const values = { foo: \"foo\" };\n      expect(() => getArray(values, \"foo\")).toThrow();\n    });\n  });\n\n  describe(\"swap\", () => {\n    it(\"should swap two items\", () => {\n      const array = [1, 2, 3];\n      swap(array, 0, 1);\n      expect(array).toEqual([2, 1, 3]);\n    });\n\n    it(\"should work for sparse arrays\", () => {\n      // A bit of a sanity check for native array behavior\n      const arr = [] as any[];\n      arr[0] = true;\n      swap(arr, 0, 2);\n\n      expect(countArrayItems(arr)).toEqual(1);\n      expect(0 in arr).toBe(false);\n      expect(2 in arr).toBe(true);\n      expect(arr[2]).toEqual(true);\n    });\n  });\n\n  describe(\"move\", () => {\n    it(\"should move an item to a new index\", () => {\n      const array = [1, 2, 3];\n      move(array, 0, 1);\n      expect(array).toEqual([2, 1, 3]);\n    });\n\n    it(\"should work with sparse arrays\", () => {\n      const array = [1];\n      move(array, 0, 2);\n\n      expect(countArrayItems(array)).toEqual(1);\n      expect(array).toEqual([undefined, undefined, 1]);\n    });\n  });\n\n  describe(\"insert\", () => {\n    it(\"should insert an item at a new index\", () => {\n      const array = [1, 2, 3];\n      insert(array, 1, 4);\n      expect(array).toEqual([1, 4, 2, 3]);\n    });\n\n    it(\"should be able to insert falsey values\", () => {\n      const array = [1, 2, 3];\n      insert(array, 1, null);\n      expect(array).toEqual([1, null, 2, 3]);\n    });\n\n    it(\"should handle sparse arrays\", () => {\n      const array: any[] = [];\n      array[2] = true;\n      insert(array, 0, true);\n\n      expect(countArrayItems(array)).toEqual(2);\n      expect(array).toEqual([true, undefined, undefined, true]);\n    });\n  });\n\n  describe(\"remove\", () => {\n    it(\"should remove an item at a given index\", () => {\n      const array = [1, 2, 3];\n      remove(array, 1);\n      expect(array).toEqual([1, 3]);\n    });\n\n    it(\"should handle sparse arrays\", () => {\n      const array: any[] = [];\n      array[2] = true;\n      remove(array, 0);\n\n      expect(countArrayItems(array)).toEqual(1);\n      expect(array).toEqual([undefined, true]);\n    });\n  });\n\n  describe(\"replace\", () => {\n    it(\"should replace an item at a given index\", () => {\n      const array = [1, 2, 3];\n      replace(array, 1, 4);\n      expect(array).toEqual([1, 4, 3]);\n    });\n\n    it(\"should handle sparse arrays\", () => {\n      const array: any[] = [];\n      array[2] = true;\n      replace(array, 0, true);\n      expect(countArrayItems(array)).toEqual(2);\n      expect(array).toEqual([true, undefined, true]);\n    });\n  });\n\n  describe(\"mutateAsArray\", () => {\n    it(\"should handle swap\", () => {\n      const values = {\n        myField: \"something\",\n        \"myField[0]\": \"foo\",\n        \"myField[2]\": \"bar\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        swap(arr, 0, 2);\n      });\n      expect(values).toEqual({\n        myField: \"something\",\n        \"myField[0]\": \"bar\",\n        \"myField[2]\": \"foo\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      });\n    });\n\n    it(\"should swap sparse arrays\", () => {\n      const values = {\n        myField: \"something\",\n        \"myField[0]\": \"foo\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        swap(arr, 0, 2);\n      });\n      expect(values).toEqual({\n        myField: \"something\",\n        \"myField[2]\": \"foo\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      });\n    });\n\n    it(\"should handle arrays with nested values\", () => {\n      const values = {\n        myField: \"something\",\n        \"myField[0].title\": \"foo\",\n        \"myField[0].note\": \"bar\",\n        \"myField[2].title\": \"other\",\n        \"myField[2].note\": \"other\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        swap(arr, 0, 2);\n      });\n      expect(values).toEqual({\n        myField: \"something\",\n        \"myField[0].title\": \"other\",\n        \"myField[0].note\": \"other\",\n        \"myField[2].title\": \"foo\",\n        \"myField[2].note\": \"bar\",\n        otherField: \"baz\",\n        \"otherField[0]\": \"something else\",\n      });\n    });\n\n    it(\"should handle move\", () => {\n      const values = {\n        myField: \"something\",\n        \"myField[0]\": \"foo\",\n        \"myField[1]\": \"bar\",\n        \"myField[2]\": \"baz\",\n        \"otherField[0]\": \"something else\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        move(arr, 0, 2);\n      });\n      expect(values).toEqual({\n        myField: \"something\",\n        \"myField[0]\": \"bar\",\n        \"myField[1]\": \"baz\",\n        \"myField[2]\": \"foo\",\n        \"otherField[0]\": \"something else\",\n      });\n    });\n\n    it(\"should not create keys for `undefined`\", () => {\n      const values = {\n        \"myField[0]\": \"foo\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        arr.unshift(undefined);\n      });\n      expect(Object.keys(values)).toHaveLength(1);\n      expect(values).toEqual({\n        \"myField[1]\": \"foo\",\n      });\n    });\n\n    it(\"should handle remove\", () => {\n      const values = {\n        myField: \"something\",\n        \"myField[0]\": \"foo\",\n        \"myField[1]\": \"bar\",\n        \"myField[2]\": \"baz\",\n        \"otherField[0]\": \"something else\",\n      };\n      mutateAsArray(\"myField\", values, (arr) => {\n        remove(arr, 1);\n      });\n      expect(values).toEqual({\n        myField: \"something\",\n        \"myField[0]\": \"foo\",\n        \"myField[1]\": \"baz\",\n        \"otherField[0]\": \"something else\",\n      });\n      expect(\"myField[2]\" in values).toBe(false);\n    });\n  });\n\n  describe(\"getDeepArrayPaths\", () => {\n    it(\"should return all paths recursively\", () => {\n      const obj = [\n        true,\n        true,\n        [true, true],\n        { foo: true, bar: { baz: true, test: [true] } },\n      ];\n\n      expect(getDeepArrayPaths(obj, \"myField\")).toEqual([\n        \"myField[0]\",\n        \"myField[1]\",\n        \"myField[2][0]\",\n        \"myField[2][1]\",\n        \"myField[3].foo\",\n        \"myField[3].bar.baz\",\n        \"myField[3].bar.test[0]\",\n      ]);\n    });\n  });\n}\n","import { WritableDraft } from \"immer/dist/internal\";\nimport { getPath, setPath } from \"set-get\";\nimport invariant from \"tiny-invariant\";\nimport create, { GetState } from \"zustand\";\nimport { immer } from \"zustand/middleware/immer\";\nimport {\n  FieldErrors,\n  TouchedFields,\n  ValidationResult,\n  Validator,\n} from \"../../validation/types\";\nimport { requestSubmit } from \"../logic/requestSubmit\";\nimport * as arrayUtil from \"./arrayUtil\";\nimport { InternalFormId } from \"./types\";\n\nexport type SyncedFormProps = {\n  formId?: string;\n  action?: string;\n  subaction?: string;\n  defaultValues: { [fieldName: string]: any };\n  registerReceiveFocus: (fieldName: string, handler: () => void) => () => void;\n  validator: Validator<unknown>;\n};\n\nexport type FormStoreState = {\n  forms: { [formId: InternalFormId]: FormState };\n  form: (formId: InternalFormId) => FormState;\n  registerForm: (formId: InternalFormId) => void;\n  cleanupForm: (formId: InternalFormId) => void;\n};\n\nexport type FormState = {\n  isHydrated: boolean;\n  isSubmitting: boolean;\n  hasBeenSubmitted: boolean;\n  fieldErrors: FieldErrors;\n  touchedFields: TouchedFields;\n  formProps?: SyncedFormProps;\n  formElement: HTMLFormElement | null;\n  currentDefaultValues: Record<string, any>;\n\n  isValid: () => boolean;\n  startSubmit: () => void;\n  endSubmit: () => void;\n  setTouched: (field: string, touched: boolean) => void;\n  setFieldError: (field: string, error: string) => void;\n  setFieldErrors: (errors: FieldErrors) => void;\n  clearFieldError: (field: string) => void;\n  reset: () => void;\n  syncFormProps: (props: SyncedFormProps) => void;\n  setFormElement: (formElement: HTMLFormElement | null) => void;\n  validateField: (fieldName: string) => Promise<string | null>;\n  validate: () => Promise<ValidationResult<unknown>>;\n  resetFormElement: () => void;\n  submit: () => void;\n  getValues: () => FormData;\n\n  controlledFields: {\n    values: { [fieldName: string]: any };\n    refCounts: { [fieldName: string]: number };\n    valueUpdatePromises: { [fieldName: string]: Promise<void> };\n    valueUpdateResolvers: { [fieldName: string]: () => void };\n\n    register: (fieldName: string) => void;\n    unregister: (fieldName: string) => void;\n    setValue: (fieldName: string, value: unknown) => void;\n    kickoffValueUpdate: (fieldName: string) => void;\n    getValue: (fieldName: string) => unknown;\n    awaitValueUpdate: (fieldName: string) => Promise<void>;\n\n    array: {\n      push: (fieldName: string, value: unknown) => void;\n      swap: (fieldName: string, indexA: number, indexB: number) => void;\n      move: (fieldName: string, fromIndex: number, toIndex: number) => void;\n      insert: (fieldName: string, index: number, value: unknown) => void;\n      unshift: (fieldName: string, value: unknown) => void;\n      remove: (fieldName: string, index: number) => void;\n      pop: (fieldName: string) => void;\n      replace: (fieldName: string, index: number, value: unknown) => void;\n    };\n  };\n};\n\nconst noOp = () => {};\nconst defaultFormState: FormState = {\n  isHydrated: false,\n  isSubmitting: false,\n  hasBeenSubmitted: false,\n  touchedFields: {},\n  fieldErrors: {},\n  formElement: null,\n  isValid: () => true,\n  startSubmit: noOp,\n  endSubmit: noOp,\n  setTouched: noOp,\n  setFieldError: noOp,\n  setFieldErrors: noOp,\n  clearFieldError: noOp,\n  currentDefaultValues: {},\n\n  reset: () => noOp,\n  syncFormProps: noOp,\n  setFormElement: noOp,\n  validateField: async () => null,\n\n  validate: async () => {\n    throw new Error(\"Validate called before form was initialized.\");\n  },\n\n  submit: async () => {\n    throw new Error(\"Submit called before form was initialized.\");\n  },\n\n  resetFormElement: noOp,\n  getValues: () => new FormData(),\n\n  controlledFields: {\n    values: {},\n    refCounts: {},\n    valueUpdatePromises: {},\n    valueUpdateResolvers: {},\n\n    register: noOp,\n    unregister: noOp,\n    setValue: noOp,\n    getValue: noOp,\n    kickoffValueUpdate: noOp,\n    awaitValueUpdate: async () => {\n      throw new Error(\"AwaitValueUpdate called before form was initialized.\");\n    },\n\n    array: {\n      push: noOp,\n      swap: noOp,\n      move: noOp,\n      insert: noOp,\n      unshift: noOp,\n      remove: noOp,\n      pop: noOp,\n      replace: noOp,\n    },\n  },\n};\n\nconst createFormState = (\n  set: (setter: (draft: WritableDraft<FormState>) => void) => void,\n  get: GetState<FormState>\n): FormState => ({\n  // It's not \"hydrated\" until the form props are synced\n  isHydrated: false,\n  isSubmitting: false,\n  hasBeenSubmitted: false,\n  touchedFields: {},\n  fieldErrors: {},\n  formElement: null,\n  currentDefaultValues: {},\n\n  isValid: () => Object.keys(get().fieldErrors).length === 0,\n  startSubmit: () =>\n    set((state) => {\n      state.isSubmitting = true;\n      state.hasBeenSubmitted = true;\n    }),\n  endSubmit: () =>\n    set((state) => {\n      state.isSubmitting = false;\n    }),\n  setTouched: (fieldName, touched) =>\n    set((state) => {\n      state.touchedFields[fieldName] = touched;\n    }),\n  setFieldError: (fieldName: string, error: string) =>\n    set((state) => {\n      state.fieldErrors[fieldName] = error;\n    }),\n  setFieldErrors: (errors: FieldErrors) =>\n    set((state) => {\n      state.fieldErrors = errors;\n    }),\n  clearFieldError: (fieldName: string) =>\n    set((state) => {\n      delete state.fieldErrors[fieldName];\n    }),\n  reset: () =>\n    set((state) => {\n      state.fieldErrors = {};\n      state.touchedFields = {};\n      state.hasBeenSubmitted = false;\n      const nextDefaults = state.formProps?.defaultValues ?? {};\n      state.controlledFields.values = nextDefaults;\n      state.currentDefaultValues = nextDefaults;\n    }),\n  syncFormProps: (props: SyncedFormProps) =>\n    set((state) => {\n      if (!state.isHydrated) {\n        state.controlledFields.values = props.defaultValues;\n        state.currentDefaultValues = props.defaultValues;\n      }\n\n      state.formProps = props;\n      state.isHydrated = true;\n    }),\n  setFormElement: (formElement: HTMLFormElement | null) => {\n    // This gets called frequently, so we want to avoid calling set() every time\n    // Or else we wind up with an infinite loop\n    if (get().formElement === formElement) return;\n    set((state) => {\n      // weird type issue here\n      // seems to be because formElement is a writable draft\n      state.formElement = formElement as any;\n    });\n  },\n  validateField: async (field: string) => {\n    const formElement = get().formElement;\n    invariant(\n      formElement,\n      \"Cannot find reference to form. This is probably a bug in remix-validated-form.\"\n    );\n\n    const validator = get().formProps?.validator;\n    invariant(\n      validator,\n      \"Cannot validator. This is probably a bug in remix-validated-form.\"\n    );\n\n    await get().controlledFields.awaitValueUpdate?.(field);\n\n    const { error } = await validator.validateField(\n      new FormData(formElement),\n      field\n    );\n\n    if (error) {\n      get().setFieldError(field, error);\n      return error;\n    } else {\n      get().clearFieldError(field);\n      return null;\n    }\n  },\n\n  validate: async () => {\n    const formElement = get().formElement;\n    invariant(\n      formElement,\n      \"Cannot find reference to form. This is probably a bug in remix-validated-form.\"\n    );\n\n    const validator = get().formProps?.validator;\n    invariant(\n      validator,\n      \"Cannot validator. This is probably a bug in remix-validated-form.\"\n    );\n\n    const result = await validator.validate(new FormData(formElement));\n    if (result.error) get().setFieldErrors(result.error.fieldErrors);\n    return result;\n  },\n\n  submit: () => {\n    const formElement = get().formElement;\n    invariant(\n      formElement,\n      \"Cannot find reference to form. This is probably a bug in remix-validated-form.\"\n    );\n\n    requestSubmit(formElement);\n  },\n\n  getValues: () => new FormData(get().formElement ?? undefined),\n\n  resetFormElement: () => get().formElement?.reset(),\n\n  controlledFields: {\n    values: {},\n    refCounts: {},\n    valueUpdatePromises: {},\n    valueUpdateResolvers: {},\n\n    register: (fieldName) => {\n      set((state) => {\n        const current = state.controlledFields.refCounts[fieldName] ?? 0;\n        state.controlledFields.refCounts[fieldName] = current + 1;\n      });\n    },\n    unregister: (fieldName) => {\n      // For this helper in particular, we may run into a case where state is undefined.\n      // When the whole form unmounts, the form state may be cleaned up before the fields are.\n      if (get() === null || get() === undefined) return;\n      set((state) => {\n        const current = state.controlledFields.refCounts[fieldName] ?? 0;\n        if (current > 1) {\n          state.controlledFields.refCounts[fieldName] = current - 1;\n          return;\n        }\n\n        const isNested = Object.keys(state.controlledFields.refCounts).some(\n          (key) => fieldName.startsWith(key) && key !== fieldName\n        );\n\n        // When nested within a field array, we should leave resetting up to the field array\n        if (!isNested) {\n          setPath(\n            state.controlledFields.values,\n            fieldName,\n            getPath(state.formProps?.defaultValues, fieldName)\n          );\n          setPath(\n            state.currentDefaultValues,\n            fieldName,\n            getPath(state.formProps?.defaultValues, fieldName)\n          );\n        }\n\n        delete state.controlledFields.refCounts[fieldName];\n      });\n    },\n    getValue: (fieldName) => getPath(get().controlledFields.values, fieldName),\n    setValue: (fieldName, value) => {\n      set((state) => {\n        setPath(state.controlledFields.values, fieldName, value);\n      });\n      get().controlledFields.kickoffValueUpdate(fieldName);\n    },\n    kickoffValueUpdate: (fieldName) => {\n      const clear = () =>\n        set((state) => {\n          delete state.controlledFields.valueUpdateResolvers[fieldName];\n          delete state.controlledFields.valueUpdatePromises[fieldName];\n        });\n      set((state) => {\n        const promise = new Promise<void>((resolve) => {\n          state.controlledFields.valueUpdateResolvers[fieldName] = resolve;\n        }).then(clear);\n        state.controlledFields.valueUpdatePromises[fieldName] = promise;\n      });\n    },\n\n    awaitValueUpdate: async (fieldName) => {\n      await get().controlledFields.valueUpdatePromises[fieldName];\n    },\n\n    array: {\n      push: (fieldName, item) => {\n        set((state) => {\n          arrayUtil\n            .getArray(state.controlledFields.values, fieldName)\n            .push(item);\n          arrayUtil.getArray(state.currentDefaultValues, fieldName).push(item);\n          // New item added to the end, no need to update touched or error\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n\n      swap: (fieldName, indexA, indexB) => {\n        set((state) => {\n          arrayUtil.swap(\n            arrayUtil.getArray(state.controlledFields.values, fieldName),\n            indexA,\n            indexB\n          );\n          arrayUtil.swap(\n            arrayUtil.getArray(state.currentDefaultValues, fieldName),\n            indexA,\n            indexB\n          );\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            arrayUtil.swap(array, indexA, indexB)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            arrayUtil.swap(array, indexA, indexB)\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n\n      move: (fieldName, from, to) => {\n        set((state) => {\n          arrayUtil.move(\n            arrayUtil.getArray(state.controlledFields.values, fieldName),\n            from,\n            to\n          );\n          arrayUtil.move(\n            arrayUtil.getArray(state.currentDefaultValues, fieldName),\n            from,\n            to\n          );\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            arrayUtil.move(array, from, to)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            arrayUtil.move(array, from, to)\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n      insert: (fieldName, index, item) => {\n        set((state) => {\n          arrayUtil.insert(\n            arrayUtil.getArray(state.controlledFields.values, fieldName),\n            index,\n            item\n          );\n          arrayUtil.insert(\n            arrayUtil.getArray(state.currentDefaultValues, fieldName),\n            index,\n            item\n          );\n          // Even though this is a new item, we need to push around other items.\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            arrayUtil.insert(array, index, false)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            arrayUtil.insert(array, index, undefined)\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n      remove: (fieldName, index) => {\n        set((state) => {\n          arrayUtil.remove(\n            arrayUtil.getArray(state.controlledFields.values, fieldName),\n            index\n          );\n          arrayUtil.remove(\n            arrayUtil.getArray(state.currentDefaultValues, fieldName),\n            index\n          );\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            arrayUtil.remove(array, index)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            arrayUtil.remove(array, index)\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n      pop: (fieldName) => {\n        set((state) => {\n          arrayUtil.getArray(state.controlledFields.values, fieldName).pop();\n          arrayUtil.getArray(state.currentDefaultValues, fieldName).pop();\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            array.pop()\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            array.pop()\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n      unshift: (fieldName, value) => {\n        set((state) => {\n          arrayUtil\n            .getArray(state.controlledFields.values, fieldName)\n            .unshift(value);\n          arrayUtil\n            .getArray(state.currentDefaultValues, fieldName)\n            .unshift(value);\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            array.unshift(false)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            array.unshift(undefined)\n          );\n        });\n      },\n      replace: (fieldName, index, item) => {\n        set((state) => {\n          arrayUtil.replace(\n            arrayUtil.getArray(state.controlledFields.values, fieldName),\n            index,\n            item\n          );\n          arrayUtil.replace(\n            arrayUtil.getArray(state.currentDefaultValues, fieldName),\n            index,\n            item\n          );\n          arrayUtil.mutateAsArray(fieldName, state.touchedFields, (array) =>\n            arrayUtil.replace(array, index, item)\n          );\n          arrayUtil.mutateAsArray(fieldName, state.fieldErrors, (array) =>\n            arrayUtil.replace(array, index, item)\n          );\n        });\n        get().controlledFields.kickoffValueUpdate(fieldName);\n      },\n    },\n  },\n});\n\nexport const useRootFormStore = create<FormStoreState>()(\n  immer((set, get) => ({\n    forms: {},\n    form: (formId) => {\n      return get().forms[formId] ?? defaultFormState;\n    },\n    cleanupForm: (formId: InternalFormId) => {\n      set((state) => {\n        delete state.forms[formId];\n      });\n    },\n    registerForm: (formId: InternalFormId) => {\n      if (get().forms[formId]) return;\n      set((state) => {\n        state.forms[formId] = createFormState(\n          (setter) => set((state) => setter(state.forms[formId])),\n          () => get().forms[formId]\n        ) as WritableDraft<FormState>;\n      });\n    },\n  }))\n);\n","import { FormState, useRootFormStore } from \"./createFormStore\";\nimport { InternalFormId } from \"./types\";\n\nexport const useFormStore = <T>(\n  formId: InternalFormId,\n  selector: (state: FormState) => T\n) => {\n  return useRootFormStore((state) => selector(state.form(formId)));\n};\n","import { useActionData, useMatches, useTransition } from \"@remix-run/react\";\nimport { useCallback, useContext } from \"react\";\nimport { getPath } from \"set-get\";\nimport invariant from \"tiny-invariant\";\nimport { FieldErrors, ValidationErrorResponseData } from \"..\";\nimport { formDefaultValuesKey } from \"./constants\";\nimport { InternalFormContext, InternalFormContextValue } from \"./formContext\";\nimport { Hydratable, hydratable } from \"./hydratable\";\nimport { useFormStore } from \"./state/storeHooks\";\nimport { InternalFormId } from \"./state/types\";\n\nexport const useInternalFormContext = (\n  formId?: string | symbol,\n  hookName?: string\n) => {\n  const formContext = useContext(InternalFormContext);\n\n  if (formId) return { formId };\n  if (formContext) return formContext;\n\n  throw new Error(\n    `Unable to determine form for ${hookName}. Please use it inside a ValidatedForm or pass a 'formId'.`\n  );\n};\n\nexport function useErrorResponseForForm({\n  fetcher,\n  subaction,\n  formId,\n}: InternalFormContextValue): ValidationErrorResponseData | null {\n  const actionData = useActionData<any>();\n  if (fetcher) {\n    if ((fetcher.data as any)?.fieldErrors) return fetcher.data as any;\n    return null;\n  }\n\n  if (!actionData?.fieldErrors) return null;\n\n  // If there's an explicit id, we should ignore data that has the wrong id\n  if (typeof formId === \"string\" && actionData.formId)\n    return actionData.formId === formId ? actionData : null;\n\n  if (\n    (!subaction && !actionData.subaction) ||\n    actionData.subaction === subaction\n  )\n    return actionData;\n\n  return null;\n}\n\nexport const useFieldErrorsForForm = (\n  context: InternalFormContextValue\n): Hydratable<FieldErrors | undefined> => {\n  const response = useErrorResponseForForm(context);\n  const hydrated = useFormStore(context.formId, (state) => state.isHydrated);\n  return hydratable.from(response?.fieldErrors, hydrated);\n};\n\nexport const useDefaultValuesFromLoader = ({\n  formId,\n}: InternalFormContextValue) => {\n  const matches = useMatches();\n  if (typeof formId === \"string\") {\n    const dataKey = formDefaultValuesKey(formId);\n    // If multiple loaders declare the same default values,\n    // we should use the data from the deepest route.\n    const match = matches\n      .reverse()\n      .find((match) => match.data && dataKey in match.data);\n    return match?.data[dataKey];\n  }\n\n  return null;\n};\n\nexport const useDefaultValuesForForm = (\n  context: InternalFormContextValue\n): Hydratable<{ [fieldName: string]: any }> => {\n  const { formId, defaultValuesProp } = context;\n  const hydrated = useFormStore(formId, (state) => state.isHydrated);\n  const errorResponse = useErrorResponseForForm(context);\n  const defaultValuesFromLoader = useDefaultValuesFromLoader(context);\n\n  // Typical flow is:\n  // - Default values only available from props or server\n  //   - Props have a higher priority than server\n  // - State gets hydrated with default values\n  // - After submit, we may need to use values from the error\n\n  if (hydrated) return hydratable.hydratedData();\n  if (errorResponse?.repopulateFields) {\n    invariant(\n      typeof errorResponse.repopulateFields === \"object\",\n      \"repopulateFields returned something other than an object\"\n    );\n    return hydratable.serverData(errorResponse.repopulateFields);\n  }\n  if (defaultValuesProp) return hydratable.serverData(defaultValuesProp);\n\n  return hydratable.serverData(defaultValuesFromLoader);\n};\n\nexport const useHasActiveFormSubmit = ({\n  fetcher,\n}: InternalFormContextValue): boolean => {\n  const transition = useTransition();\n  const hasActiveSubmission = fetcher\n    ? fetcher.state === \"submitting\"\n    : !!transition.submission;\n  return hasActiveSubmission;\n};\n\nexport const useFieldTouched = (\n  field: string,\n  { formId }: InternalFormContextValue\n) => {\n  const touched = useFormStore(formId, (state) => state.touchedFields[field]);\n  const setFieldTouched = useFormStore(formId, (state) => state.setTouched);\n  const setTouched = useCallback(\n    (touched: boolean) => setFieldTouched(field, touched),\n    [field, setFieldTouched]\n  );\n  return [touched, setTouched] as const;\n};\n\nexport const useFieldError = (\n  name: string,\n  context: InternalFormContextValue\n) => {\n  const fieldErrors = useFieldErrorsForForm(context);\n  const state = useFormStore(\n    context.formId,\n    (state) => state.fieldErrors[name]\n  );\n  return fieldErrors.map((fieldErrors) => fieldErrors?.[name]).hydrateTo(state);\n};\n\nexport const useClearError = (context: InternalFormContextValue) => {\n  const { formId } = context;\n  return useFormStore(formId, (state) => state.clearFieldError);\n};\n\nexport const useCurrentDefaultValueForField = (\n  formId: InternalFormId,\n  field: string\n) =>\n  useFormStore(formId, (state) => getPath(state.currentDefaultValues, field));\n\nexport const useFieldDefaultValue = (\n  name: string,\n  context: InternalFormContextValue\n) => {\n  const defaultValues = useDefaultValuesForForm(context);\n  const state = useCurrentDefaultValueForField(context.formId, name);\n\n  return defaultValues.map((val) => getPath(val, name)).hydrateTo(state);\n};\n\nexport const useInternalIsSubmitting = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.isSubmitting);\n\nexport const useInternalIsValid = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.isValid());\n\nexport const useInternalHasBeenSubmitted = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.hasBeenSubmitted);\n\nexport const useValidateField = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.validateField);\n\nexport const useValidate = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.validate);\n\nconst noOpReceiver = () => () => {};\nexport const useRegisterReceiveFocus = (formId: InternalFormId) =>\n  useFormStore(\n    formId,\n    (state) => state.formProps?.registerReceiveFocus ?? noOpReceiver\n  );\n\nconst defaultDefaultValues = {};\nexport const useSyncedDefaultValues = (formId: InternalFormId) =>\n  useFormStore(\n    formId,\n    (state) => state.formProps?.defaultValues ?? defaultDefaultValues\n  );\n\nexport const useSetTouched = ({ formId }: InternalFormContextValue) =>\n  useFormStore(formId, (state) => state.setTouched);\n\nexport const useTouchedFields = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.touchedFields);\n\nexport const useFieldErrors = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.fieldErrors);\n\nexport const useSetFieldErrors = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.setFieldErrors);\n\nexport const useResetFormElement = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.resetFormElement);\n\nexport const useSubmitForm = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.submit);\n\nexport const useFormActionProp = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.formProps?.action);\n\nexport const useFormSubactionProp = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.formProps?.subaction);\n\nexport const useFormValues = (formId: InternalFormId) =>\n  useFormStore(formId, (state) => state.getValues);\n","import { useCallback, useEffect } from \"react\";\nimport { InternalFormContextValue } from \"../formContext\";\nimport { useFieldDefaultValue } from \"../hooks\";\nimport { useFormStore } from \"./storeHooks\";\nimport { InternalFormId } from \"./types\";\n\nexport const useControlledFieldValue = (\n  context: InternalFormContextValue,\n  field: string\n) => {\n  const value = useFormStore(context.formId, (state) =>\n    state.controlledFields.getValue(field)\n  );\n  const isFormHydrated = useFormStore(\n    context.formId,\n    (state) => state.isHydrated\n  );\n  const defaultValue = useFieldDefaultValue(field, context);\n\n  return isFormHydrated ? value : defaultValue;\n};\n\nexport const useRegisterControlledField = (\n  context: InternalFormContextValue,\n  field: string\n) => {\n  const resolveUpdate = useFormStore(\n    context.formId,\n    (state) => state.controlledFields.valueUpdateResolvers[field]\n  );\n  useEffect(() => {\n    resolveUpdate?.();\n  }, [resolveUpdate]);\n\n  const register = useFormStore(\n    context.formId,\n    (state) => state.controlledFields.register\n  );\n  const unregister = useFormStore(\n    context.formId,\n    (state) => state.controlledFields.unregister\n  );\n  useEffect(() => {\n    register(field);\n    return () => unregister(field);\n  }, [context.formId, field, register, unregister]);\n};\n\nexport const useControllableValue = (\n  context: InternalFormContextValue,\n  field: string\n) => {\n  useRegisterControlledField(context, field);\n\n  const setControlledFieldValue = useFormStore(\n    context.formId,\n    (state) => state.controlledFields.setValue\n  );\n  const setValue = useCallback(\n    (value: unknown) => setControlledFieldValue(field, value),\n    [field, setControlledFieldValue]\n  );\n\n  const value = useControlledFieldValue(context, field);\n\n  return [value, setValue] as const;\n};\n\nexport const useUpdateControllableValue = (formId: InternalFormId) => {\n  const setValue = useFormStore(\n    formId,\n    (state) => state.controlledFields.setValue\n  );\n  return useCallback(\n    (field: string, value: unknown) => setValue(field, value),\n    [setValue]\n  );\n};\n\nexport const useAwaitValue = (formId: InternalFormId) => {\n  const awaitValue = useFormStore(\n    formId,\n    (state) => state.controlledFields.awaitValueUpdate\n  );\n  return useCallback((field: string) => awaitValue(field), [awaitValue]);\n};\n","import { useEffect, useMemo } from \"react\";\nimport {\n  createGetInputProps,\n  GetInputProps,\n  ValidationBehaviorOptions,\n} from \"./internal/getInputProps\";\nimport {\n  useInternalFormContext,\n  useFieldTouched,\n  useFieldError,\n  useFieldDefaultValue,\n  useClearError,\n  useInternalIsSubmitting,\n  useInternalIsValid,\n  useInternalHasBeenSubmitted,\n  useValidateField,\n  useRegisterReceiveFocus,\n} from \"./internal/hooks\";\nimport {\n  useControllableValue,\n  useUpdateControllableValue,\n} from \"./internal/state/controlledFields\";\n\n/**\n * Returns whether or not the parent form is currently being submitted.\n * This is different from remix's `useTransition().submission` in that it\n * is aware of what form it's in and when _that_ form is being submitted.\n *\n * @param formId\n */\nexport const useIsSubmitting = (formId?: string) => {\n  const formContext = useInternalFormContext(formId, \"useIsSubmitting\");\n  return useInternalIsSubmitting(formContext.formId);\n};\n\n/**\n * Returns whether or not the current form is valid.\n *\n * @param formId the id of the form. Only necessary if being used outside a ValidatedForm.\n */\nexport const useIsValid = (formId?: string) => {\n  const formContext = useInternalFormContext(formId, \"useIsValid\");\n  return useInternalIsValid(formContext.formId);\n};\n\nexport type FieldProps = {\n  /**\n   * The validation error message if there is one.\n   */\n  error?: string;\n  /**\n   * Clears the error message.\n   */\n  clearError: () => void;\n  /**\n   * Validates the field.\n   */\n  validate: () => void;\n  /**\n   * The default value of the field, if there is one.\n   */\n  defaultValue?: any;\n  /**\n   * Whether or not the field has been touched.\n   */\n  touched: boolean;\n  /**\n   * Helper to set the touched state of the field.\n   */\n  setTouched: (touched: boolean) => void;\n  /**\n   * Helper to get all the props necessary for a regular input.\n   */\n  getInputProps: GetInputProps;\n};\n\n/**\n * Provides the data and helpers necessary to set up a field.\n */\nexport const useField = (\n  name: string,\n  options?: {\n    /**\n     * Allows you to configure a custom function that will be called\n     * when the input needs to receive focus due to a validation error.\n     * This is useful for custom components that use a hidden input.\n     */\n    handleReceiveFocus?: () => void;\n    /**\n     * Allows you to specify when a field gets validated (when using getInputProps)\n     */\n    validationBehavior?: Partial<ValidationBehaviorOptions>;\n    /**\n     * The formId of the form you want to use.\n     * This is not necesary if the input is used inside a form.\n     */\n    formId?: string;\n  }\n): FieldProps => {\n  const { formId: providedFormId, handleReceiveFocus } = options ?? {};\n  const formContext = useInternalFormContext(providedFormId, \"useField\");\n\n  const defaultValue = useFieldDefaultValue(name, formContext);\n  const [touched, setTouched] = useFieldTouched(name, formContext);\n  const error = useFieldError(name, formContext);\n  const clearError = useClearError(formContext);\n\n  const hasBeenSubmitted = useInternalHasBeenSubmitted(formContext.formId);\n  const validateField = useValidateField(formContext.formId);\n  const registerReceiveFocus = useRegisterReceiveFocus(formContext.formId);\n\n  useEffect(() => {\n    if (handleReceiveFocus)\n      return registerReceiveFocus(name, handleReceiveFocus);\n  }, [handleReceiveFocus, name, registerReceiveFocus]);\n\n  const field = useMemo<FieldProps>(() => {\n    const helpers = {\n      error,\n      clearError: () => clearError(name),\n      validate: () => {\n        validateField(name);\n      },\n      defaultValue,\n      touched,\n      setTouched,\n    };\n    const getInputProps = createGetInputProps({\n      ...helpers,\n      name,\n      hasBeenSubmitted,\n      validationBehavior: options?.validationBehavior,\n    });\n    return {\n      ...helpers,\n      getInputProps,\n    };\n  }, [\n    error,\n    clearError,\n    defaultValue,\n    touched,\n    setTouched,\n    name,\n    hasBeenSubmitted,\n    options?.validationBehavior,\n    validateField,\n  ]);\n\n  return field;\n};\n\nexport const useControlField = <T>(name: string, formId?: string) => {\n  const context = useInternalFormContext(formId, \"useControlField\");\n  const [value, setValue] = useControllableValue(context, name);\n  return [value as T, setValue as (value: T) => void] as const;\n};\n\nexport const useUpdateControlledField = (formId?: string) => {\n  const context = useInternalFormContext(formId, \"useControlField\");\n  return useUpdateControllableValue(context.formId);\n};\n","/**\n * @remix-run/server-runtime v1.6.5\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// must be a type since this is a subtype of response\n// interfaces must conform to the types they extend\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n *\n * @see https://remix.run/api/remix#json\n */\nconst json = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), { ...responseInit,\n    headers\n  });\n};\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n *\n * @see https://remix.run/api/remix#redirect\n */\nconst redirect = (url, init = 302) => {\n  let responseInit = init;\n\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, { ...responseInit,\n    headers\n  });\n};\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nfunction isRedirectResponse(response) {\n  return redirectStatusCodes.has(response.status);\n}\nfunction isCatchResponse(response) {\n  return response.headers.get(\"X-Remix-Catch\") != null;\n}\n\nexport { isCatchResponse, isRedirectResponse, isResponse, json, redirect };\n","import { json } from \"remix\";\nimport {\n  formDefaultValuesKey,\n  FORM_DEFAULTS_FIELD,\n} from \"./internal/constants\";\nimport {\n  ValidatorError,\n  ValidationErrorResponseData,\n} from \"./validation/types\";\n\n/**\n * Takes the errors from a `Validator` and returns a `Response`.\n * When you return this from your action, `ValidatedForm` on the frontend will automatically\n * display the errors on the correct fields on the correct form.\n *\n * You can also provide a second argument to `validationError`\n * to specify how to repopulate the form when JS is disabled.\n *\n * @example\n * ```ts\n * const result = validator.validate(await request.formData());\n * if (result.error) return validationError(result.error, result.submittedData);\n * ```\n */\nexport function validationError(\n  error: ValidatorError,\n  repopulateFields?: unknown,\n  init?: ResponseInit\n) {\n  return json<ValidationErrorResponseData>(\n    {\n      fieldErrors: error.fieldErrors,\n      subaction: error.subaction,\n      repopulateFields,\n      formId: error.formId,\n    },\n    { status: 422, ...init }\n  );\n}\n\nexport type FormDefaults = {\n  [formDefaultsKey: `${typeof FORM_DEFAULTS_FIELD}_${string}`]: any;\n};\n\nexport const setFormDefaults = <DataType = any>(\n  formId: string,\n  defaultValues: Partial<DataType>\n): FormDefaults => ({\n  [formDefaultValuesKey(formId)]: defaultValues,\n});\n","import { useCallback, useRef } from \"react\";\n\nexport class MultiValueMap<Key, Value> {\n  private dict: Map<Key, Value[]> = new Map();\n\n  add = (key: Key, value: Value) => {\n    if (this.dict.has(key)) {\n      this.dict.get(key)!.push(value);\n    } else {\n      this.dict.set(key, [value]);\n    }\n  };\n\n  delete = (key: Key) => {\n    this.dict.delete(key);\n  };\n\n  remove = (key: Key, value: Value) => {\n    if (!this.dict.has(key)) return;\n    const array = this.dict.get(key)!;\n    const index = array.indexOf(value);\n    if (index !== -1) array.splice(index, 1);\n    if (array.length === 0) this.dict.delete(key);\n  };\n\n  getAll = (key: Key): Value[] => {\n    return this.dict.get(key) ?? [];\n  };\n\n  entries = (): IterableIterator<[Key, Value[]]> => this.dict.entries();\n\n  values = (): IterableIterator<Value[]> => this.dict.values();\n\n  has = (key: Key): boolean => this.dict.has(key);\n}\n\nexport const useMultiValueMap = <Key, Value>() => {\n  const ref = useRef<MultiValueMap<Key, Value> | null>(null);\n  return useCallback(() => {\n    if (ref.current) return ref.current;\n    ref.current = new MultiValueMap();\n    return ref.current;\n  }, []);\n};\n","import { useEffect, useRef } from \"react\";\n\nexport function useSubmitComplete(isSubmitting: boolean, callback: () => void) {\n  const isPending = useRef(false);\n  useEffect(() => {\n    if (isSubmitting) {\n      isPending.current = true;\n    }\n\n    if (!isSubmitting && isPending.current) {\n      isPending.current = false;\n      callback();\n    }\n  });\n}\n","import type React from \"react\";\nimport { useEffect, useLayoutEffect, useRef } from \"react\";\nimport * as R from \"remeda\";\n\nexport const omit = (obj: any, ...keys: string[]) => {\n  const result = { ...obj };\n  for (const key of keys) {\n    delete result[key];\n  }\n  return result;\n};\n\nexport const mergeRefs = <T = any>(\n  refs: Array<React.MutableRefObject<T> | React.LegacyRef<T> | undefined>\n): React.RefCallback<T> => {\n  return (value: T) => {\n    refs.filter(Boolean).forEach((ref) => {\n      if (typeof ref === \"function\") {\n        ref(value);\n      } else if (ref != null) {\n        (ref as React.MutableRefObject<T | null>).current = value;\n      }\n    });\n  };\n};\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n\nexport const useDeepEqualsMemo = <T>(item: T): T => {\n  const ref = useRef<T>(item);\n  const areEqual = ref.current === item || R.equals(ref.current, item);\n  useEffect(() => {\n    if (!areEqual) {\n      ref.current = item;\n    }\n  });\n  return areEqual ? ref.current : item;\n};\n","import {\n  Form as RemixForm,\n  FormMethod,\n  useFetcher,\n  useSubmit,\n} from \"@remix-run/react\";\nimport React, {\n  ComponentProps,\n  FormEvent,\n  RefObject,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport * as R from \"remeda\";\nimport { useIsSubmitting, useIsValid } from \"./hooks\";\nimport { FORM_ID_FIELD } from \"./internal/constants\";\nimport {\n  InternalFormContext,\n  InternalFormContextValue,\n} from \"./internal/formContext\";\nimport {\n  useDefaultValuesFromLoader,\n  useErrorResponseForForm,\n  useHasActiveFormSubmit,\n  useSetFieldErrors,\n} from \"./internal/hooks\";\nimport { MultiValueMap, useMultiValueMap } from \"./internal/MultiValueMap\";\nimport {\n  SyncedFormProps,\n  useRootFormStore,\n} from \"./internal/state/createFormStore\";\nimport { useFormStore } from \"./internal/state/storeHooks\";\nimport { useSubmitComplete } from \"./internal/submissionCallbacks\";\nimport {\n  mergeRefs,\n  useDeepEqualsMemo,\n  useIsomorphicLayoutEffect as useLayoutEffect,\n} from \"./internal/util\";\nimport { FieldErrors, Validator } from \"./validation/types\";\n\nexport type FormProps<DataType> = {\n  /**\n   * A `Validator` object that describes how to validate the form.\n   */\n  validator: Validator<DataType>;\n  /**\n   * A submit callback that gets called when the form is submitted\n   * after all validations have been run.\n   */\n  onSubmit?: (event: React.FormEvent<HTMLFormElement>) => void | Promise<void>;\n  /**\n   * Allows you to provide a `fetcher` from remix's `useFetcher` hook.\n   * The form will use the fetcher for loading states, action data, etc\n   * instead of the default form action.\n   */\n  fetcher?: ReturnType<typeof useFetcher>;\n  /**\n   * Accepts an object of default values for the form\n   * that will automatically be propagated to the form fields via `useField`.\n   */\n  defaultValues?: Partial<DataType>;\n  /**\n   * A ref to the form element.\n   */\n  formRef?: React.RefObject<HTMLFormElement>;\n  /**\n   * An optional sub-action to use for the form.\n   * Setting a value here will cause the form to be submitted with an extra `subaction` value.\n   * This can be useful when there are multiple forms on the screen handled by the same action.\n   */\n  subaction?: string;\n  /**\n   * Reset the form to the default values after the form has been successfully submitted.\n   * This is useful if you want to submit the same form multiple times,\n   * and don't redirect in-between submissions.\n   */\n  resetAfterSubmit?: boolean;\n  /**\n   * Normally, the first invalid input will be focused when the validation fails on form submit.\n   * Set this to `false` to disable this behavior.\n   */\n  disableFocusOnError?: boolean;\n} & Omit<ComponentProps<typeof RemixForm>, \"onSubmit\">;\n\nconst getDataFromForm = (el: HTMLFormElement) => new FormData(el);\n\nfunction nonNull<T>(value: T | null | undefined): value is T {\n  return value !== null;\n}\n\nconst focusFirstInvalidInput = (\n  fieldErrors: FieldErrors,\n  customFocusHandlers: MultiValueMap<string, () => void>,\n  formElement: HTMLFormElement\n) => {\n  const namesInOrder = [...formElement.elements]\n    .map((el) => {\n      const input = el instanceof RadioNodeList ? el[0] : el;\n      if (input instanceof HTMLElement && \"name\" in input)\n        return (input as any).name;\n      return null;\n    })\n    .filter(nonNull)\n    .filter((name) => name in fieldErrors);\n  const uniqueNamesInOrder = R.uniq(namesInOrder);\n\n  for (const fieldName of uniqueNamesInOrder) {\n    if (customFocusHandlers.has(fieldName)) {\n      customFocusHandlers.getAll(fieldName).forEach((handler) => {\n        handler();\n      });\n      break;\n    }\n\n    const elem = formElement.elements.namedItem(fieldName);\n    if (!elem) continue;\n\n    if (elem instanceof RadioNodeList) {\n      const selectedRadio =\n        [...elem]\n          .filter(\n            (item): item is HTMLInputElement => item instanceof HTMLInputElement\n          )\n          .find((item) => item.value === elem.value) ?? elem[0];\n      if (selectedRadio && selectedRadio instanceof HTMLInputElement) {\n        selectedRadio.focus();\n        break;\n      }\n    }\n\n    if (elem instanceof HTMLElement) {\n      if (elem instanceof HTMLInputElement && elem.type === \"hidden\") {\n        continue;\n      }\n\n      elem.focus();\n      break;\n    }\n  }\n};\n\nconst useFormId = (providedId?: string): string | symbol => {\n  // We can use a `Symbol` here because we only use it after hydration\n  const [symbolId] = useState(() => Symbol(\"remix-validated-form-id\"));\n  return providedId ?? symbolId;\n};\n\n/**\n * Use a component to access the state so we don't cause\n * any extra rerenders of the whole form.\n */\nconst FormResetter = ({\n  resetAfterSubmit,\n  formRef,\n}: {\n  resetAfterSubmit: boolean;\n  formRef: RefObject<HTMLFormElement>;\n}) => {\n  const isSubmitting = useIsSubmitting();\n  const isValid = useIsValid();\n  useSubmitComplete(isSubmitting, () => {\n    if (isValid && resetAfterSubmit) {\n      formRef.current?.reset();\n    }\n  });\n  return null;\n};\n\nfunction formEventProxy<T extends object>(event: T): T {\n  let defaultPrevented = false;\n  return new Proxy(event, {\n    get: (target, prop) => {\n      if (prop === \"preventDefault\") {\n        return () => {\n          defaultPrevented = true;\n        };\n      }\n\n      if (prop === \"defaultPrevented\") {\n        return defaultPrevented;\n      }\n\n      return target[prop as keyof T];\n    },\n  }) as T;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * The primary form component of `remix-validated-form`.\n */\nexport function ValidatedForm<DataType>({\n  validator,\n  onSubmit,\n  children,\n  fetcher,\n  action,\n  defaultValues: unMemoizedDefaults,\n  formRef: formRefProp,\n  onReset,\n  subaction,\n  resetAfterSubmit = false,\n  disableFocusOnError,\n  method,\n  replace,\n  id,\n  ...rest\n}: FormProps<DataType>) {\n  const formId = useFormId(id);\n  const providedDefaultValues = useDeepEqualsMemo(unMemoizedDefaults);\n  const contextValue = useMemo<InternalFormContextValue>(\n    () => ({\n      formId,\n      action,\n      subaction,\n      defaultValuesProp: providedDefaultValues,\n      fetcher,\n    }),\n    [action, fetcher, formId, providedDefaultValues, subaction]\n  );\n  const backendError = useErrorResponseForForm(contextValue);\n  const backendDefaultValues = useDefaultValuesFromLoader(contextValue);\n  const hasActiveSubmission = useHasActiveFormSubmit(contextValue);\n  const formRef = useRef<HTMLFormElement>(null);\n  const Form = fetcher?.Form ?? RemixForm;\n\n  const submit = useSubmit();\n  const setFieldErrors = useSetFieldErrors(formId);\n  const setFieldError = useFormStore(formId, (state) => state.setFieldError);\n  const reset = useFormStore(formId, (state) => state.reset);\n  const startSubmit = useFormStore(formId, (state) => state.startSubmit);\n  const endSubmit = useFormStore(formId, (state) => state.endSubmit);\n  const syncFormProps = useFormStore(formId, (state) => state.syncFormProps);\n  const setFormElementInState = useFormStore(\n    formId,\n    (state) => state.setFormElement\n  );\n  const cleanupForm = useRootFormStore((state) => state.cleanupForm);\n  const registerForm = useRootFormStore((state) => state.registerForm);\n\n  const customFocusHandlers = useMultiValueMap<string, () => void>();\n  const registerReceiveFocus: SyncedFormProps[\"registerReceiveFocus\"] =\n    useCallback(\n      (fieldName, handler) => {\n        customFocusHandlers().add(fieldName, handler);\n        return () => {\n          customFocusHandlers().remove(fieldName, handler);\n        };\n      },\n      [customFocusHandlers]\n    );\n\n  // TODO: all these hooks running at startup cause extra, unnecessary renders\n  // There must be a nice way to avoid this.\n  useLayoutEffect(() => {\n    registerForm(formId);\n    return () => cleanupForm(formId);\n  }, [cleanupForm, formId, registerForm]);\n\n  useLayoutEffect(() => {\n    syncFormProps({\n      action,\n      defaultValues: providedDefaultValues ?? backendDefaultValues ?? {},\n      subaction,\n      registerReceiveFocus,\n      validator,\n    });\n  }, [\n    action,\n    providedDefaultValues,\n    registerReceiveFocus,\n    subaction,\n    syncFormProps,\n    backendDefaultValues,\n    validator,\n  ]);\n\n  useLayoutEffect(() => {\n    setFormElementInState(formRef.current);\n  }, [setFormElementInState]);\n\n  useEffect(() => {\n    setFieldErrors(backendError?.fieldErrors ?? {});\n  }, [backendError?.fieldErrors, setFieldErrors, setFieldError]);\n\n  useSubmitComplete(hasActiveSubmission, () => {\n    endSubmit();\n  });\n\n  const handleSubmit = async (\n    e: FormEvent<HTMLFormElement>,\n    target: typeof e.currentTarget,\n    nativeEvent: HTMLSubmitEvent[\"nativeEvent\"]\n  ) => {\n    startSubmit();\n    const result = await validator.validate(getDataFromForm(e.currentTarget));\n\n    const submitter = nativeEvent.submitter as HTMLFormSubmitter | null;\n\n    if (!submitter?.formNoValidate && result.error) {\n      endSubmit();\n      setFieldErrors(result.error.fieldErrors);\n      endSubmit();\n      if (!disableFocusOnError) {\n        focusFirstInvalidInput(\n          result.error.fieldErrors,\n          customFocusHandlers(),\n          formRef.current!\n        );\n      }\n    } else {\n      setFieldErrors({});\n      const eventProxy = formEventProxy(e);\n      await onSubmit?.(eventProxy);\n      if (eventProxy.defaultPrevented) {\n        endSubmit();\n        return;\n      }\n\n      // We deviate from the remix code here a bit because of our async submit.\n      // In remix's `FormImpl`, they use `event.currentTarget` to get the form,\n      // but we already have the form in `formRef.current` so we can just use that.\n      // If we use `event.currentTarget` here, it will break because `currentTarget`\n      // will have changed since the start of the submission.\n      if (fetcher) fetcher.submit(submitter || e.currentTarget);\n      else\n        submit(submitter || target, {\n          replace,\n          method: (submitter?.formMethod as FormMethod) || method,\n        });\n    }\n  };\n\n  return (\n    <Form\n      ref={mergeRefs([formRef, formRefProp])}\n      {...rest}\n      id={id}\n      action={action}\n      method={method}\n      replace={replace}\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleSubmit(\n          e,\n          e.currentTarget,\n          (e as unknown as HTMLSubmitEvent).nativeEvent\n        );\n      }}\n      onReset={(event) => {\n        onReset?.(event);\n        if (event.defaultPrevented) return;\n        reset();\n      }}\n    >\n      <InternalFormContext.Provider value={contextValue}>\n        <>\n          <FormResetter formRef={formRef} resetAfterSubmit={resetAfterSubmit} />\n          {subaction && (\n            <input type=\"hidden\" value={subaction} name=\"subaction\" />\n          )}\n          {id && <input type=\"hidden\" value={id} name={FORM_ID_FIELD} />}\n          {children}\n        </>\n      </InternalFormContext.Provider>\n    </Form>\n  );\n}\n","import { setPath } from \"set-get\";\nimport { MultiValueMap } from \"./MultiValueMap\";\n\nexport const objectFromPathEntries = (entries: [string, any][]) => {\n  const map = new MultiValueMap<string, any>();\n  entries.forEach(([key, value]) => map.add(key, value));\n  return [...map.entries()].reduce(\n    (acc, [key, value]) =>\n      setPath(acc, key, value.length === 1 ? value[0] : value),\n    {} as Record<string, any>\n  );\n};\n","import * as R from \"remeda\";\nimport { CreateValidatorArg, GenericObject, Validator } from \"..\";\nimport { FORM_ID_FIELD } from \"../internal/constants\";\nimport { objectFromPathEntries } from \"../internal/flatten\";\n\nconst preprocessFormData = (data: GenericObject | FormData): GenericObject => {\n  // A slightly janky way of determining if the data is a FormData object\n  // since node doesn't really have FormData\n  if (\"entries\" in data && typeof data.entries === \"function\")\n    return objectFromPathEntries([...data.entries()]);\n  return objectFromPathEntries(Object.entries(data));\n};\n\nconst omitInternalFields = (data: GenericObject): GenericObject =>\n  R.omit(data, [FORM_ID_FIELD]);\n\n/**\n * Used to create a validator for a form.\n * It provides built-in handling for unflattening nested objects and\n * extracting the values from FormData.\n */\nexport function createValidator<T>(\n  validator: CreateValidatorArg<T>\n): Validator<T> {\n  return {\n    validate: async (value) => {\n      const data = preprocessFormData(value);\n      const result = await validator.validate(omitInternalFields(data));\n\n      if (result.error) {\n        return {\n          data: undefined,\n          error: {\n            fieldErrors: result.error,\n            subaction: data.subaction,\n            formId: data[FORM_ID_FIELD],\n          },\n          submittedData: data,\n          formId: data[FORM_ID_FIELD],\n        };\n      }\n\n      return {\n        data: result.data,\n        error: undefined,\n        submittedData: data,\n        formId: data[FORM_ID_FIELD],\n      };\n    },\n    validateField: (data: GenericObject | FormData, field: string) =>\n      validator.validateField(preprocessFormData(data), field),\n  };\n}\n","import { useMemo } from \"react\";\nimport {} from \"../internal/getInputProps\";\nimport {\n  useInternalFormContext,\n  useClearError,\n  useSetTouched,\n  useDefaultValuesForForm,\n  useFieldErrorsForForm,\n  useInternalIsSubmitting,\n  useInternalHasBeenSubmitted,\n  useTouchedFields,\n  useInternalIsValid,\n  useFieldErrors,\n  useValidateField,\n  useValidate,\n  useSetFieldErrors,\n  useResetFormElement,\n  useSyncedDefaultValues,\n  useFormActionProp,\n  useFormSubactionProp,\n  useSubmitForm,\n  useFormValues,\n} from \"../internal/hooks\";\nimport {\n  FieldErrors,\n  TouchedFields,\n  ValidationResult,\n} from \"../validation/types\";\n\nexport type FormState = {\n  fieldErrors: FieldErrors;\n  isSubmitting: boolean;\n  hasBeenSubmitted: boolean;\n  touchedFields: TouchedFields;\n  defaultValues: { [fieldName: string]: any };\n  action?: string;\n  subaction?: string;\n  isValid: boolean;\n};\n\n/**\n * Returns information about the form.\n *\n * @param formId the id of the form. Only necessary if being used outside a ValidatedForm.\n */\nexport const useFormState = (formId?: string): FormState => {\n  const formContext = useInternalFormContext(formId, \"useFormState\");\n  const isSubmitting = useInternalIsSubmitting(formContext.formId);\n  const hasBeenSubmitted = useInternalHasBeenSubmitted(formContext.formId);\n  const touchedFields = useTouchedFields(formContext.formId);\n  const isValid = useInternalIsValid(formContext.formId);\n  const action = useFormActionProp(formContext.formId);\n  const subaction = useFormSubactionProp(formContext.formId);\n\n  const syncedDefaultValues = useSyncedDefaultValues(formContext.formId);\n  const defaultValuesToUse = useDefaultValuesForForm(formContext);\n  const hydratedDefaultValues =\n    defaultValuesToUse.hydrateTo(syncedDefaultValues);\n\n  const fieldErrorsFromState = useFieldErrors(formContext.formId);\n  const fieldErrorsToUse = useFieldErrorsForForm(formContext);\n  const hydratedFieldErrors = fieldErrorsToUse.hydrateTo(fieldErrorsFromState);\n\n  return useMemo(\n    () => ({\n      action,\n      subaction,\n      defaultValues: hydratedDefaultValues,\n      fieldErrors: hydratedFieldErrors ?? {},\n      hasBeenSubmitted,\n      isSubmitting,\n      touchedFields,\n      isValid,\n    }),\n    [\n      action,\n      hasBeenSubmitted,\n      hydratedDefaultValues,\n      hydratedFieldErrors,\n      isSubmitting,\n      isValid,\n      subaction,\n      touchedFields,\n    ]\n  );\n};\n\nexport type FormHelpers = {\n  /**\n   * Clear the error of the specified field.\n   */\n  clearError: (fieldName: string) => void;\n  /**\n   * Validate the specified field.\n   */\n  validateField: (fieldName: string) => Promise<string | null>;\n  /**\n   * Change the touched state of the specified field.\n   */\n  setTouched: (fieldName: string, touched: boolean) => void;\n  /**\n   * Validate the whole form and populate any errors.\n   */\n  validate: () => Promise<ValidationResult<unknown>>;\n  /**\n   * Clears all errors on the form.\n   */\n  clearAllErrors: () => void;\n  /**\n   * Resets the form.\n   *\n   * _Note_: The equivalent behavior can be achieved by calling formElement.reset()\n   * or clicking a button element with `type=\"reset\"`.\n   */\n  reset: () => void;\n  /**\n   * Submits the form, running all validations first.\n   *\n   * _Note_: This is equivalent to clicking a button element with `type=\"submit\"` or calling formElement.submit().\n   */\n  submit: () => void;\n  /**\n   * Returns the current form values as FormData\n   */\n  getValues: () => FormData;\n};\n\n/**\n * Returns helpers that can be used to update the form state.\n *\n * @param formId the id of the form. Only necessary if being used outside a ValidatedForm.\n */\nexport const useFormHelpers = (formId?: string): FormHelpers => {\n  const formContext = useInternalFormContext(formId, \"useFormHelpers\");\n  const setTouched = useSetTouched(formContext);\n  const validateField = useValidateField(formContext.formId);\n  const validate = useValidate(formContext.formId);\n  const clearError = useClearError(formContext);\n  const setFieldErrors = useSetFieldErrors(formContext.formId);\n  const reset = useResetFormElement(formContext.formId);\n  const submit = useSubmitForm(formContext.formId);\n  const getValues = useFormValues(formContext.formId);\n  return useMemo(\n    () => ({\n      setTouched,\n      validateField,\n      clearError,\n      validate,\n      clearAllErrors: () => setFieldErrors({}),\n      reset,\n      submit,\n      getValues,\n    }),\n    [\n      clearError,\n      reset,\n      setFieldErrors,\n      setTouched,\n      submit,\n      validate,\n      validateField,\n      getValues,\n    ]\n  );\n};\n","import { useCallback, useMemo } from \"react\";\nimport {\n  useInternalFormContext,\n  useRegisterReceiveFocus,\n} from \"./internal/hooks\";\nimport { useFormHelpers, useFormState } from \"./unreleased/formStateHooks\";\nimport {\n  FieldErrors,\n  TouchedFields,\n  ValidationResult,\n} from \"./validation/types\";\n\nexport type FormContextValue = {\n  /**\n   * All the errors in all the fields in the form.\n   */\n  fieldErrors: FieldErrors;\n  /**\n   * Clear the errors of the specified fields.\n   */\n  clearError: (...names: string[]) => void;\n  /**\n   * Validate the specified field.\n   */\n  validateField: (fieldName: string) => Promise<string | null>;\n  /**\n   * The `action` prop of the form.\n   */\n  action?: string;\n  /**\n   * The `subaction` prop of the form.\n   */\n  subaction?: string;\n  /**\n   * Whether or not the form is submitting.\n   */\n  isSubmitting: boolean;\n  /**\n   * Whether or not a submission has been attempted.\n   * This is true once the form has been submitted, even if there were validation errors.\n   * Resets to false when the form is reset.\n   */\n  hasBeenSubmitted: boolean;\n  /**\n   * Whether or not the form is valid.\n   */\n  isValid: boolean;\n  /**\n   * The default values of the form.\n   */\n  defaultValues?: { [fieldName: string]: any };\n  /**\n   * Register a custom focus handler to be used when\n   * the field needs to receive focus due to a validation error.\n   */\n  registerReceiveFocus: (fieldName: string, handler: () => void) => () => void;\n  /**\n   * Any fields that have been touched by the user.\n   */\n  touchedFields: TouchedFields;\n  /**\n   * Change the touched state of the specified field.\n   */\n  setFieldTouched: (fieldName: string, touched: boolean) => void;\n  /**\n   * Validate the whole form and populate any errors.\n   */\n  validate: () => Promise<ValidationResult<unknown>>;\n  /**\n   * Clears all errors on the form.\n   */\n  clearAllErrors: () => void;\n  /**\n   * Resets the form.\n   *\n   * _Note_: The equivalent behavior can be achieved by calling formElement.reset()\n   * or clicking a button element with `type=\"reset\"`.\n   */\n  reset: () => void;\n  /**\n   * Submits the form, running all validations first.\n   *\n   * _Note_: This is equivalent to clicking a button element with `type=\"submit\"` or calling formElement.submit().\n   */\n  submit: () => void;\n  /**\n   * Returns the current form values as FormData\n   */\n  getValues: () => FormData;\n};\n\n/**\n * Provides access to some of the internal state of the form.\n */\nexport const useFormContext = (formId?: string): FormContextValue => {\n  // Try to access context so we get our error specific to this hook if it's not there\n  const context = useInternalFormContext(formId, \"useFormContext\");\n  const state = useFormState(formId);\n  const {\n    clearError: internalClearError,\n    setTouched,\n    validateField,\n    clearAllErrors,\n    validate,\n    reset,\n    submit,\n    getValues,\n  } = useFormHelpers(formId);\n\n  const registerReceiveFocus = useRegisterReceiveFocus(context.formId);\n\n  const clearError = useCallback(\n    (...names: string[]) => {\n      names.forEach((name) => {\n        internalClearError(name);\n      });\n    },\n    [internalClearError]\n  );\n\n  return useMemo(\n    () => ({\n      ...state,\n      setFieldTouched: setTouched,\n      validateField,\n      clearError,\n      registerReceiveFocus,\n      clearAllErrors,\n      validate,\n      reset,\n      submit,\n      getValues,\n    }),\n    [\n      clearAllErrors,\n      clearError,\n      registerReceiveFocus,\n      reset,\n      setTouched,\n      state,\n      submit,\n      validate,\n      validateField,\n      getValues,\n    ]\n  );\n};\n","import React, { useMemo } from \"react\";\nimport { useCallback } from \"react\";\nimport invariant from \"tiny-invariant\";\nimport { InternalFormContextValue } from \"../formContext\";\nimport {\n  useFieldDefaultValue,\n  useFieldError,\n  useInternalFormContext,\n  useInternalHasBeenSubmitted,\n  useValidateField,\n} from \"../hooks\";\nimport { useRegisterControlledField } from \"./controlledFields\";\nimport { useFormStore } from \"./storeHooks\";\n\nexport type FieldArrayValidationBehavior = \"onChange\" | \"onSubmit\";\n\nexport type FieldArrayValidationBehaviorOptions = {\n  initial: FieldArrayValidationBehavior;\n  whenSubmitted: FieldArrayValidationBehavior;\n};\n\nconst useInternalFieldArray = (\n  context: InternalFormContextValue,\n  field: string,\n  validationBehavior?: Partial<FieldArrayValidationBehaviorOptions>\n) => {\n  const value = useFieldDefaultValue(field, context);\n  useRegisterControlledField(context, field);\n  const hasBeenSubmitted = useInternalHasBeenSubmitted(context.formId);\n  const validateField = useValidateField(context.formId);\n  const error = useFieldError(field, context);\n\n  const resolvedValidationBehavior: FieldArrayValidationBehaviorOptions = {\n    initial: \"onSubmit\",\n    whenSubmitted: \"onChange\",\n    ...validationBehavior,\n  };\n\n  const behavior = hasBeenSubmitted\n    ? resolvedValidationBehavior.whenSubmitted\n    : resolvedValidationBehavior.initial;\n\n  const maybeValidate = useCallback(() => {\n    if (behavior === \"onChange\") {\n      validateField(field);\n    }\n  }, [behavior, field, validateField]);\n\n  invariant(\n    value === undefined || value === null || Array.isArray(value),\n    `FieldArray: defaultValue value for ${field} must be an array, null, or undefined`\n  );\n\n  const arr = useFormStore(\n    context.formId,\n    (state) => state.controlledFields.array\n  );\n\n  const helpers = useMemo(\n    () => ({\n      push: (item: any) => {\n        arr.push(field, item);\n        maybeValidate();\n      },\n      swap: (indexA: number, indexB: number) => {\n        arr.swap(field, indexA, indexB);\n        maybeValidate();\n      },\n      move: (from: number, to: number) => {\n        arr.move(field, from, to);\n        maybeValidate();\n      },\n      insert: (index: number, value: any) => {\n        arr.insert(field, index, value);\n        maybeValidate();\n      },\n      unshift: (value: any) => {\n        arr.unshift(field, value);\n        maybeValidate();\n      },\n      remove: (index: number) => {\n        arr.remove(field, index);\n        maybeValidate();\n      },\n      pop: () => {\n        arr.pop(field);\n        maybeValidate();\n      },\n      replace: (index: number, value: any) => {\n        arr.replace(field, index, value);\n        maybeValidate();\n      },\n    }),\n    [arr, field, maybeValidate]\n  );\n\n  const arrayValue = useMemo(() => value ?? [], [value]);\n\n  return [arrayValue, helpers, error] as const;\n};\n\nexport type FieldArrayHelpers<Item = any> = {\n  push: (item: Item) => void;\n  swap: (indexA: number, indexB: number) => void;\n  move: (from: number, to: number) => void;\n  insert: (index: number, value: Item) => void;\n  unshift: (value: Item) => void;\n  remove: (index: number) => void;\n  pop: () => void;\n  replace: (index: number, value: Item) => void;\n};\n\nexport type UseFieldArrayOptions = {\n  formId?: string;\n  validationBehavior?: Partial<FieldArrayValidationBehaviorOptions>;\n};\n\nexport function useFieldArray<Item = any>(\n  name: string,\n  { formId, validationBehavior }: UseFieldArrayOptions = {}\n) {\n  const context = useInternalFormContext(formId, \"FieldArray\");\n\n  return useInternalFieldArray(context, name, validationBehavior) as [\n    itemDefaults: Item[],\n    helpers: FieldArrayHelpers,\n    error: string | undefined\n  ];\n}\n\nexport type FieldArrayProps = {\n  name: string;\n  children: (\n    itemDefaults: any[],\n    helpers: FieldArrayHelpers,\n    error: string | undefined\n  ) => React.ReactNode;\n  formId?: string;\n  validationBehavior?: FieldArrayValidationBehaviorOptions;\n};\n\nexport const FieldArray = ({\n  name,\n  children,\n  formId,\n  validationBehavior,\n}: FieldArrayProps) => {\n  const context = useInternalFormContext(formId, \"FieldArray\");\n  const [value, helpers, error] = useInternalFieldArray(\n    context,\n    name,\n    validationBehavior\n  );\n  return <>{children(value, helpers, error)}</>;\n};\n"],"names":["this","from","i","l","fn","a","b","uniq","R.omitBy","_","R.pathOr","hydratedData","replace","require$$0","h","k","n","p","q","d","f","c","g","r","t","u","shimModule","require$$1","v","w","e","m","withSelectorModule","useSyncExternalStoreWithSelector","createStore__default","o","s","produce","arrayUtil.getArray","arrayUtil.swap","arrayUtil.mutateAsArray","arrayUtil.move","arrayUtil.insert","arrayUtil.remove","arrayUtil.replace","create","state","match","touched","fieldErrors","value","R.equals","R.uniq","Form","RemixForm","useLayoutEffect","_a","R.omit"],"mappings":"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"}